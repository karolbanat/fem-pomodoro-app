*,:after,:before{box-sizing:border-box;margin:0;padding:0}ol,ul{list-style:none}html:focus-within{scroll-behavior:smooth}html{font-size:62.5%}body{font-size:1.6rem;line-height:1.1;min-height:100vh;text-rendering:optimizeSpeed}a:not([class]){-webkit-text-decoration-skip:ink;text-decoration-skip-ink:auto}img,picture{display:block;max-width:100%}button,input,select,textarea{font:inherit}@media (prefers-reduced-motion:reduce){html:focus-within{scroll-behavior:auto}*,:after,:before{animation-duration:.01ms!important;animation-iteration-count:1!important;scroll-behavior:auto!important;transition-duration:.01ms!important}}:root{--clr-theme-red:#f87272;--clr-theme-cyan:#72f4f8;--clr-theme-violet:#d882f8;--clr-neutral-100:#fff;--clr-neutral-200:#eff1fa;--clr-neutral-400:#d6dfff;--clr-neutral-700:#1e213e;--clr-neutral-800:#161932;--ff-default:"Kumbh Sans",sans-serif;--ff-sans-serif:Kumbh Sans,sans-serif;--ls-sans-serif:0.05em;--ff-serif:Roboto Slab,serif;--ls-serif:normal;--ff-monospace:Space Mono,serif;--ls-monospace:0.1em;--fw-regular:400;--fw-bold:700;--fz-100:1.1rem;--fz-200:1.2rem;--fz-250:1.2rem;--fz-300:1.4rem;--fz-400:1.5rem;--fz-500:1.6rem;--fz-600:2rem;--fz-700:3.2rem;--fz-900:8rem;--ls-200:0.38em;--ls-400:0.9375em;--borr-200:1rem;--borr-300:1.5rem;--borr-pill:100vmax;--borr-circle:50%}@media only screen and (min-width:48rem){:root{--fz-100:1.3rem;--fz-250:1.4rem;--fz-300:1.6rem;--fz-600:2.8rem;--fz-900:10rem;--borr-300:2.5rem}}body{background-color:var(--clr-neutral-700);color:var(--clr-neutral-400);font-family:var(--ff-default,sans-serif);font-weight:var(--fw-700,700)}body[data-theme=red]{--theme-colour:var(--clr-theme-red)}body[data-theme=cyan]{--theme-colour:var(--clr-theme-cyan)}body[data-theme=violet]{--theme-colour:var(--clr-theme-violet)}body[data-font=sans-serif]{--theme-font:var(--ff-sans-serif)}body[data-font=serif]{--theme-font:var(--ff-serif)}body[data-font=monospace]{--theme-font:var(--ff-monospace)}main{padding-block:3.2rem}@media only screen and (min-width:48rem){main{-webkit-margin-before:8rem;margin-block-start:8rem}}@media only screen and (min-width:62em){main{-webkit-margin-before:5.4rem;margin-block-start:5.4rem}}.flow>*+*{margin-top:var(--flow-spacer,1em)}.container{--max-width:111rem;--padding-inline:2.4rem;margin-inline:auto;width:min(var(--max-width),100% - 2 * var(--padding-inline))}.state-button{--transition-time:0.35s;--transition-function:ease-in-out;background:none;border:none;border-radius:var(--borr-pill,2rem);color:var(--clr-neutral-400);cursor:pointer;display:inline-block;font-family:var(--theme-font);font-size:var(--fz-250,1.4rem);font-weight:var(--fw-bold,700);opacity:.4;padding-block:1.25em;padding-inline:1.75em;transition:opacity var(--transition-time) var(--transition-function),background-color var(--transition-time) var(--transition-function)}.state-button:focus-visible,.state-button:hover{opacity:1}.state-button[data-active]{background-color:var(--theme-colour);color:var(--clr-neutral-700);opacity:1}.state-group{background-color:var(--clr-neutral-800);border-radius:var(--borr-pill,2rem);display:flex;justify-content:center;max-width:-moz-max-content;max-width:max-content;padding:.8rem}.timer__progress-bar{--progress:0;stroke-width:.4rem;stroke-linecap:round;stroke-dasharray:300;stroke-dashoffset:var(--progress,0);stroke:var(--theme-colour,#000);fill:none;transform:rotate(-90deg);transform-origin:center}.visually-hidden{clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%);height:1px;overflow:hidden;position:absolute;white-space:nowrap;width:1px}.mx-auto{margin-inline:auto}.margin-logo{-webkit-margin-after:4rem;margin-block-end:4rem}@media only screen and (min-width:48rem){.margin-logo{-webkit-margin-after:4.8rem;margin-block-end:4.8rem}}.margin-state-group{-webkit-margin-after:4.8rem;margin-block-end:4.8rem}@media only screen and (min-width:48rem){.margin-state-group{-webkit-margin-after:10.8rem;margin-block-end:10.8rem}}@media only screen and (min-width:62em){.margin-state-group{-webkit-margin-after:4.4rem;margin-block-end:4.4rem}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
