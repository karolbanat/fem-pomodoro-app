"use strict";function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _defineProperties(t,e){for(var o=0;o<e.length;o++){var i=e[o];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,_toPropertyKey(i.key),i)}}function _createClass(t,e,o){return e&&_defineProperties(t.prototype,e),o&&_defineProperties(t,o),Object.defineProperty(t,"prototype",{writable:!1}),t}function _toPropertyKey(t){t=_toPrimitive(t,"string");return"symbol"===_typeof(t)?t:String(t)}function _toPrimitive(t,e){if("object"!==_typeof(t)||null===t)return t;var o=t[Symbol.toPrimitive];if(void 0===o)return("string"===e?String:Number)(t);o=o.call(t,e||"default");if("object"!==_typeof(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var settingsButton=document.querySelector("#settings-button"),settingsModal=document.querySelector("#settings-modal"),closeModalButton=document.querySelector("#close-settings-modal-button"),settingsForm=settingsModal.querySelector("#settings-form"),pomodoroTimeInput=settingsForm.querySelector("#pomodoro-time"),shortBreakTimeInput=settingsForm.querySelector("#short-break-time"),longBreakTimeInput=settingsForm.querySelector("#long-break-time"),fontRadioButtons=Array.from(settingsForm.querySelectorAll('input[type="radio"][name="font"]')),colourRadioButtons=Array.from(settingsForm.querySelectorAll('input[type="radio"][name="colour"]')),settingsSubmit=settingsForm.querySelector('button[type="submit"]'),timeStateButtons=Array.from(document.querySelectorAll(".state-button")),SECONDS_IN_MINUTE=60,DEFAULT_FONT="sans-serif",DEFAULT_COLOUR="red",DEFAULT_POMODORO_TIME=25,DEFAULT_SHORT_BREAK_TIME=5,DEFAULT_LONG_BREAK_TIME=15,AppTheme=_createClass(function t(){var o=this;_classCallCheck(this,t),this.colour=DEFAULT_COLOUR,this.font=DEFAULT_FONT,this.updateTheme=function(t,e){o.colour=e,o.font=t,document.body.dataset.font=t,document.body.dataset.theme=e}}),PomodoroTimer=_createClass(function t(){var e=this,o=0<arguments.length&&void 0!==arguments[0]?arguments[0]:0;_classCallCheck(this,t),this.observers=[],this.state="INITIAL",this.start=function(){e.setState("COUNTING"),e.count()},this.count=function(){0===e.countingTime?(e.setState("END"),clearTimeout(e.countTimeout)):e.countTimeout=setTimeout(function(){e.updateTime(),e.count()},1e3)},this.pause=function(){e.setState("PAUSED"),clearTimeout(e.countTimeout)},this.restart=function(){e.setState("INITIAL"),e.setTime(e.baseTime),clearTimeout(e.countTimeout)},this.getTime=function(){return e.baseTime},this.getCurrentTime=function(){return e.countingTime},this.setTime=function(t){e.baseTime=t,e.countingTime=t,e.notifyObservers()},this.updateTime=function(){e.countingTime--,e.notifyObservers()},this.getState=function(){return e.state},this.setState=function(t){e.state=t,"END"===e.state&&e.notifyObservers()},this.addObserver=function(t){e.observers.push(t)},this.notifyObservers=function(){e.observers.forEach(function(t){return t.update(e)})},this.baseTime=o,this.countingTime=o}),TimerView=_createClass(function t(e){var i=this;_classCallCheck(this,t),this.update=function(t){i.updateTime(t.getCurrentTime()),i.updateProgressBar(t.getCurrentTime(),t.getTime()),"END"===t.getState()&&(i.updateButtonLabel("restart"),i.updateTimeAnnouncement("polite"),i.resetProgressBar())},this.updateButtonLabel=function(t){i.timerButton.innerText=t},this.updateTime=function(t){i.timerTime.innerHTML=formatTime(t)},this.updateProgressBar=function(t,e){var o=Number(getComputedStyle(i.timeProgressBar).getPropertyValue("--circumference"));i.timeProgressBar.style.setProperty("--progress",((1-t/e)*o).toFixed(0))},this.updateTimeAnnouncement=function(){i.timerTime.setAttribute("aria-live",0<arguments.length&&void 0!==arguments[0]?arguments[0]:"off")},this.resetProgressBar=function(){i.timeProgressBar.style.setProperty("--progress","0")},this.timer=document.querySelector(".timer"),this.timeProgressBar=this.timer.querySelector("#progress-bar"),this.timerTime=this.timer.querySelector("#timer-time"),this.timerButton=this.timer.querySelector("#timer-button"),this.timerButton.addEventListener("click",e)}),PomodoroTimerController=_createClass(function t(e){var o=this;_classCallCheck(this,t),this.timerAction=function(){switch(o.timer.getState()){case"INITIAL":case"PAUSED":o.startTimer();break;case"COUNTING":o.pauseTimer();break;case"END":o.restartTimer()}},this.startTimer=function(){o.timer.start(),o.view.updateButtonLabel("pause")},this.pauseTimer=function(){o.timer.pause(),o.view.updateButtonLabel("start")},this.restartTimer=function(){o.timer.restart(),o.view.updateButtonLabel("start"),o.view.updateTimeAnnouncement()},this.setTime=function(t){o.timer.setTime(t)},this.timer=e,this.view=new TimerView(this.timerAction),e.addObserver(this.view)}),PomodoroApp=_createClass(function t(){var i=this,e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:DEFAULT_POMODORO_TIME,o=1<arguments.length&&void 0!==arguments[1]?arguments[1]:DEFAULT_SHORT_BREAK_TIME,r=2<arguments.length&&void 0!==arguments[2]?arguments[2]:DEFAULT_LONG_BREAK_TIME;_classCallCheck(this,t),this.appState="POMODORO",this.setTimes=function(t,e,o){i.pomodoroTime=t,i.shortBreakTime=e,i.longBreakTime=o,i.changeState(i.appState)},this.changeState=function(t){i.appState=t,i.timerController.restartTimer(),i.setTimerBasedOnState()},this.setTimerBasedOnState=function(){switch(i.appState){case"POMODORO":i.timerController.setTime(minutesToSeconds(i.pomodoroTime));break;case"SHORT_BREAK":i.timerController.setTime(minutesToSeconds(i.shortBreakTime));break;case"LONG_BREAK":i.timerController.setTime(minutesToSeconds(i.longBreakTime))}},this.timerController=new PomodoroTimerController(new PomodoroTimer),this.setTimes(e,o,r)}),appTheme=new AppTheme,pomodoroApp=new PomodoroApp;function minutesToSeconds(t){return t*SECONDS_IN_MINUTE}function getMinutesFromSeconds(t){return Math.floor(t/SECONDS_IN_MINUTE)}function getRemainingSeconds(t){return t%SECONDS_IN_MINUTE}function addLeadingZero(t){return t<10?"0".concat(t):t.toString()}function formatTime(t){var e=getMinutesFromSeconds(t),t=getRemainingSeconds(t);return addLeadingZero(e)+":"+addLeadingZero(t)}function activateStateButton(t){timeStateButtons.forEach(function(t){return t.classList.remove("active")}),t.classList.add("active")}function openModal(){settingsModal.dataset.open="true",closeModalButton.focus()}function closeModal(){settingsModal.dataset.open="false",settingsButton.focus()}settingsSubmit.addEventListener("click",function(t){t.preventDefault();var t=Number(pomodoroTimeInput.value),e=Number(shortBreakTimeInput.value),o=Number(longBreakTimeInput.value),i=fontRadioButtons.find(function(t){return t.checked}).value,r=colourRadioButtons.find(function(t){return t.checked}).value;pomodoroApp.setTimes(t,e,o),appTheme.updateTheme(i,r),closeModal()}),settingsButton.addEventListener("click",openModal),closeModalButton.addEventListener("click",closeModal),timeStateButtons.forEach(function(t){return t.addEventListener("click",function(t){var t=t.target,e=t.dataset.state.toUpperCase();activateStateButton(t),pomodoroApp.changeState(e)})}),document.addEventListener("keydown",function(t){"Tab"===t.key&&(t.shiftKey&&document.activeElement===closeModalButton?(settingsSubmit.focus(),t.preventDefault()):t.shiftKey||document.activeElement!==settingsSubmit||(closeModalButton.focus(),t.preventDefault()))});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4udHMiXSwibmFtZXMiOlsic2V0dGluZ3NCdXR0b24iLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJzZXR0aW5nc01vZGFsIiwiY2xvc2VNb2RhbEJ1dHRvbiIsInNldHRpbmdzRm9ybSIsInBvbW9kb3JvVGltZUlucHV0Iiwic2hvcnRCcmVha1RpbWVJbnB1dCIsImxvbmdCcmVha1RpbWVJbnB1dCIsImZvbnRSYWRpb0J1dHRvbnMiLCJBcnJheSIsImZyb20iLCJxdWVyeVNlbGVjdG9yQWxsIiwiY29sb3VyUmFkaW9CdXR0b25zIiwic2V0dGluZ3NTdWJtaXQiLCJ0aW1lU3RhdGVCdXR0b25zIiwiU0VDT05EU19JTl9NSU5VVEUiLCJERUZBVUxUX0ZPTlQiLCJERUZBVUxUX0NPTE9VUiIsIkRFRkFVTFRfUE9NT0RPUk9fVElNRSIsIkRFRkFVTFRfU0hPUlRfQlJFQUtfVElNRSIsIkRFRkFVTFRfTE9OR19CUkVBS19USU1FIiwiQXBwVGhlbWUiLCJfY3JlYXRlQ2xhc3MiLCJfdGhpcyIsInRoaXMiLCJfY2xhc3NDYWxsQ2hlY2siLCJjb2xvdXIiLCJmb250IiwidXBkYXRlVGhlbWUiLCJib2R5IiwiZGF0YXNldCIsInRoZW1lIiwiUG9tb2Rvcm9UaW1lciIsIl90aGlzMiIsInRpbWUiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJ1bmRlZmluZWQiLCJvYnNlcnZlcnMiLCJzdGF0ZSIsInN0YXJ0Iiwic2V0U3RhdGUiLCJjb3VudCIsImNvdW50aW5nVGltZSIsImNsZWFyVGltZW91dCIsImNvdW50VGltZW91dCIsInNldFRpbWVvdXQiLCJ1cGRhdGVUaW1lIiwicGF1c2UiLCJyZXN0YXJ0Iiwic2V0VGltZSIsImJhc2VUaW1lIiwiZ2V0VGltZSIsImdldEN1cnJlbnRUaW1lIiwibm90aWZ5T2JzZXJ2ZXJzIiwiZ2V0U3RhdGUiLCJhZGRPYnNlcnZlciIsIm9ic2VydmVyIiwicHVzaCIsImZvckVhY2giLCJ1cGRhdGUiLCJUaW1lclZpZXciLCJidXR0b25PbkNsaWNrIiwiX3RoaXMzIiwib2JzZXJ2YWJsZSIsIm9icyIsInVwZGF0ZVByb2dyZXNzQmFyIiwidXBkYXRlQnV0dG9uTGFiZWwiLCJ1cGRhdGVUaW1lQW5ub3VuY2VtZW50IiwicmVzZXRQcm9ncmVzc0JhciIsImxhYmVsIiwidGltZXJCdXR0b24iLCJpbm5lclRleHQiLCJ0aW1lclRpbWUiLCJpbm5lckhUTUwiLCJmb3JtYXRUaW1lIiwiY3VycmVudCIsImJhc2UiLCJjaXJjdW1mZXJlbmNlIiwiTnVtYmVyIiwiZ2V0Q29tcHV0ZWRTdHlsZSIsInRpbWVQcm9ncmVzc0JhciIsImdldFByb3BlcnR5VmFsdWUiLCJzdHlsZSIsInNldFByb3BlcnR5IiwidG9GaXhlZCIsInNldEF0dHJpYnV0ZSIsInRpbWVyIiwiYWRkRXZlbnRMaXN0ZW5lciIsIlBvbW9kb3JvVGltZXJDb250cm9sbGVyIiwiX3RoaXM0IiwidGltZXJBY3Rpb24iLCJzdGFydFRpbWVyIiwicGF1c2VUaW1lciIsInJlc3RhcnRUaW1lciIsInZpZXciLCJQb21vZG9yb0FwcCIsIl90aGlzNSIsInBvbW9kb3JvVGltZSIsInNob3J0QnJlYWtUaW1lIiwibG9uZ0JyZWFrVGltZSIsImFwcFN0YXRlIiwic2V0VGltZXMiLCJwb21vZG9ybyIsInNob3J0QnJlYWsiLCJsb25nQnJlYWsiLCJjaGFuZ2VTdGF0ZSIsInRpbWVyQ29udHJvbGxlciIsInNldFRpbWVyQmFzZWRPblN0YXRlIiwibWludXRlc1RvU2Vjb25kcyIsImFwcFRoZW1lIiwicG9tb2Rvcm9BcHAiLCJtaW51dGVzIiwiZ2V0TWludXRlc0Zyb21TZWNvbmRzIiwic2Vjb25kcyIsIk1hdGgiLCJmbG9vciIsImdldFJlbWFpbmluZ1NlY29uZHMiLCJhZGRMZWFkaW5nWmVybyIsImNvbmNhdCIsInRvU3RyaW5nIiwicmVtYWluaW5nU2Vjb25kcyIsImFjdGl2YXRlU3RhdGVCdXR0b24iLCJidXR0b24iLCJjbGFzc0xpc3QiLCJyZW1vdmUiLCJhZGQiLCJvcGVuTW9kYWwiLCJvcGVuIiwiZm9jdXMiLCJjbG9zZU1vZGFsIiwiZSIsInByZXZlbnREZWZhdWx0IiwidmFsdWUiLCJjaG9zZW5Gb250IiwiZmluZCIsImNoZWNrZWQiLCJjaG9zZW5Db2xvdXIiLCJ0YXJnZXQiLCJ0b1VwcGVyQ2FzZSIsImtleSIsInNoaWZ0S2V5IiwiYWN0aXZlRWxlbWVudCJdLCJtYXBwaW5ncyI6IjJqQ0FDQSxJQUFNQSxlQUFvQ0MsU0FBU0MsY0FBYyxrQkFBa0IsRUFDN0VDLGNBQTZCRixTQUFTQyxjQUFjLGlCQUFpQixFQUNyRUUsaUJBQXNDSCxTQUFTQyxjQUFjLDhCQUE4QixFQUczRkcsYUFBZ0NGLGNBQWNELGNBQWMsZ0JBQWdCLEVBQzVFSSxrQkFBc0NELGFBQWFILGNBQWMsZ0JBQWdCLEVBQ2pGSyxvQkFBd0NGLGFBQWFILGNBQWMsbUJBQW1CLEVBQ3RGTSxtQkFBdUNILGFBQWFILGNBQWMsa0JBQWtCLEVBQ3BGTyxpQkFBNENDLE1BQU1DLEtBQ3ZETixhQUFhTyxpQkFBaUIsa0NBQWtDLENBQUMsRUFFNURDLG1CQUE4Q0gsTUFBTUMsS0FDekROLGFBQWFPLGlCQUFpQixvQ0FBb0MsQ0FBQyxFQUU5REUsZUFBb0NULGFBQWFILGNBQWMsdUJBQXVCLEVBR3RGYSxpQkFBNkNMLE1BQU1DLEtBQUtWLFNBQVNXLGlCQUFpQixlQUFlLENBQUMsRUFJbEdJLGtCQUE0QixHQUU1QkMsYUFBcUIsYUFDckJDLGVBQXlCLE1BRXpCQyxzQkFBZ0MsR0FDaENDLHlCQUFtQyxFQUNuQ0Msd0JBQWtDLEdBNENsQ0MsU0FBUUMsYUFBZCxTQUFBRCxJQUFBLElBQUFFLEVBQUFDLEtBQUFDLGdCQUFBRCxLQUFBSCxDQUFBLEVBQ0NHLEtBQUFFLE9BQWlCVCxlQUNqQk8sS0FBQUcsS0FBYVgsYUFFYlEsS0FBQUksWUFBYyxTQUFDRCxFQUFZRCxHQUMxQkgsRUFBS0csT0FBU0EsRUFDZEgsRUFBS0ksS0FBT0EsRUFDWjNCLFNBQVM2QixLQUFLQyxRQUFRSCxLQUFPQSxFQUM3QjNCLFNBQVM2QixLQUFLQyxRQUFR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QUFPMUUsa0JBQWtCZ0ksS0FBSyxFQUM3Q2xDLEVBQWlCcEIsT0FBT3pFLG9CQUFvQitILEtBQUssRUFDakRqQyxFQUFnQnJCLE9BQU94RSxtQkFBbUI4SCxLQUFLLEVBQy9DQyxFQUFtQjlILGlCQUFpQitILEtBQUssU0FBQVosR0FBTSxPQUFJQSxFQUFPYSxPQUFPLENBQUEsRUFBRUgsTUFDbkVJLEVBQXVCN0gsbUJBQW1CMkgsS0FBSyxTQUFBWixHQUFNLE9BQUlBLEVBQU9hLE9BQU8sQ0FBQSxFQUFFSCxNQUUvRXRCLFlBQVlULFNBQVNKLEVBQWNDLEVBQWdCQyxDQUFhLEVBQ2hFVSxTQUFTbEYsWUFBWTBHLEVBQVlHLENBQVksRUFDN0NQLFdBQVUsQ0FDWCxDQUFDLEVBRURuSSxlQUFleUYsaUJBQWlCLFFBQVN1QyxTQUFTLEVBRWxENUgsaUJBQWlCcUYsaUJBQWlCLFFBQVMwQyxVQUFVLEVBRXJEcEgsaUJBQWlCNkMsUUFBUSxTQUFBZ0UsR0FBTSxPQUM5QkEsRUFBT25DLGlCQUFpQixRQUFTLFNBQUMyQyxHQUNqQyxJQUFNUixFQUE0QlEsRUFBRU8sT0FDOUJuRyxFQUEyQm9GLEVBQU83RixRQUFRUyxNQUFNb0csWUFBVyxFQUNqRWpCLG9CQUFvQkMsQ0FBTSxFQUMxQlosWUFBWUwsWUFBWW5FLENBQUssQ0FDOUIsQ0FBQyxDQUFDLENBQUEsRUFHSHZDLFNBQVN3RixpQkFBaUIsVUFBVyxTQUFDMkMsR0FDSixRQUFWQSxFQUFFUyxNQUlyQlQsRUFBRVUsVUFBWTdJLFNBQVM4SSxnQkFBa0IzSSxrQkFDNUNVLGVBQWVvSCxNQUFLLEVBQ3BCRSxFQUFFQyxlQUFjLEdBSVpELEVBQUVVLFVBQVk3SSxTQUFTOEksZ0JBQWtCakksaUJBQzdDVixpQkFBaUI4SCxNQUFLLEVBQ3RCRSxFQUFFQyxlQUFjLEdBRWxCLENBQUMiLCJmaWxlIjoibWFpbi5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBtb2RhbCBhbmQgbW9kYWwgcmVhbHRlZCBlbGVtZW50cyAqL1xyXG5jb25zdCBzZXR0aW5nc0J1dHRvbjogSFRNTEJ1dHRvbkVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjc2V0dGluZ3MtYnV0dG9uJyk7XHJcbmNvbnN0IHNldHRpbmdzTW9kYWw6IEhUTUxFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3NldHRpbmdzLW1vZGFsJyk7XHJcbmNvbnN0IGNsb3NlTW9kYWxCdXR0b246IEhUTUxCdXR0b25FbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2Nsb3NlLXNldHRpbmdzLW1vZGFsLWJ1dHRvbicpO1xyXG5cclxuLyogc2V0dGluZ3MgZm9ybSBlbGVtZW50cyAqL1xyXG5jb25zdCBzZXR0aW5nc0Zvcm06IEhUTUxGb3JtRWxlbWVudCA9IHNldHRpbmdzTW9kYWwucXVlcnlTZWxlY3RvcignI3NldHRpbmdzLWZvcm0nKTtcclxuY29uc3QgcG9tb2Rvcm9UaW1lSW5wdXQ6IEhUTUxJbnB1dEVsZW1lbnQgPSBzZXR0aW5nc0Zvcm0ucXVlcnlTZWxlY3RvcignI3BvbW9kb3JvLXRpbWUnKTtcclxuY29uc3Qgc2hvcnRCcmVha1RpbWVJbnB1dDogSFRNTElucHV0RWxlbWVudCA9IHNldHRpbmdzRm9ybS5xdWVyeVNlbGVjdG9yKCcjc2hvcnQtYnJlYWstdGltZScpO1xyXG5jb25zdCBsb25nQnJlYWtUaW1lSW5wdXQ6IEhUTUxJbnB1dEVsZW1lbnQgPSBzZXR0aW5nc0Zvcm0ucXVlcnlTZWxlY3RvcignI2xvbmctYnJlYWstdGltZScpO1xyXG5jb25zdCBmb250UmFkaW9CdXR0b25zOiBBcnJheTxIVE1MSW5wdXRFbGVtZW50PiA9IEFycmF5LmZyb20oXHJcblx0c2V0dGluZ3NGb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoJ2lucHV0W3R5cGU9XCJyYWRpb1wiXVtuYW1lPVwiZm9udFwiXScpXHJcbik7XHJcbmNvbnN0IGNvbG91clJhZGlvQnV0dG9uczogQXJyYXk8SFRNTElucHV0RWxlbWVudD4gPSBBcnJheS5mcm9tKFxyXG5cdHNldHRpbmdzRm9ybS5xdWVyeVNlbGVjdG9yQWxsKCdpbnB1dFt0eXBlPVwicmFkaW9cIl1bbmFtZT1cImNvbG91clwiXScpXHJcbik7XHJcbmNvbnN0IHNldHRpbmdzU3VibWl0OiBIVE1MQnV0dG9uRWxlbWVudCA9IHNldHRpbmdzRm9ybS5xdWVyeVNlbGVjdG9yKCdidXR0b25bdHlwZT1cInN1Ym1pdFwiXScpO1xyXG5cclxuLyogdGltZSBzdGF0ZSBidXR0b25zICovXHJcbmNvbnN0IHRpbWVTdGF0ZUJ1dHRvbnM6IEFycmF5PEhUTUxCdXR0b25FbGVtZW50PiA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnN0YXRlLWJ1dHRvbicpKTtcclxuXHJcbi8qIGNvbnN0YW50cyAqL1xyXG4vKiAtLS0gZ2VuZXJhbCAqL1xyXG5jb25zdCBTRUNPTkRTX0lOX01JTlVURTogbnVtYmVyID0gNjA7XHJcbi8qIC0tLSB0aGVtZSAqL1xyXG5jb25zdCBERUZBVUxUX0ZPTlQ6IEZvbnQgPSAnc2Fucy1zZXJpZic7XHJcbmNvbnN0IERFRkFVTFRfQ09MT1VSOiBDb2xvdXIgPSAncmVkJztcclxuLyogLS0tIHRpbWVzICovXHJcbmNvbnN0IERFRkFVTFRfUE9NT0RPUk9fVElNRTogbnVtYmVyID0gMjU7XHJcbmNvbnN0IERFRkFVTFRfU0hPUlRfQlJFQUtfVElNRTogbnVtYmVyID0gNTtcclxuY29uc3QgREVGQVVMVF9MT05HX0JSRUFLX1RJTUU6IG51bWJlciA9IDE1O1xyXG5cclxuLyogdHlwZXMgKi9cclxudHlwZSBDb2xvdXIgPSAncmVkJyB8ICdjeWFuJyB8ICd2aW9sZXQnO1xyXG50eXBlIEZvbnQgPSAnc2VyaWYnIHwgJ3NhbnMtc2VyaWYnIHwgJ21vbm9zcGFjZSc7XHJcbnR5cGUgVGltZXJTdGF0ZSA9ICdJTklUSUFMJyB8ICdDT1VOVElORycgfCAnUEFVU0VEJyB8ICdFTkQnO1xyXG50eXBlIFBvbW9kb3JvQXBwU3RhdGVzID0gJ1BPTU9ET1JPJyB8ICdTSE9SVF9CUkVBSycgfCAnTE9OR19CUkVBSyc7XHJcblxyXG4vKiBpbnRlcmZhY2VzICovXHJcbmludGVyZmFjZSBPYnNlcnZhYmxlIHtcclxuXHRhZGRPYnNlcnZlcjogKG9ic2VydmVyOiBPYnNlcnZlcikgPT4gdm9pZDtcclxuXHRub3RpZnlPYnNlcnZlcnM6ICgpID0+IHZvaWQ7XHJcbn1cclxuXHJcbmludGVyZmFjZSBPYnNlcnZlciB7XHJcblx0dXBkYXRlOiAob2JzZXJ2YWJsZTogT2JzZXJ2YWJsZSkgPT4gdm9pZDtcclxufVxyXG5cclxuaW50ZXJmYWNlIFRoZW1lIHtcclxuXHRjb2xvdXI6IENvbG91cjtcclxuXHRmb250OiBGb250O1xyXG5cdHVwZGF0ZVRoZW1lOiAoZm9udDogRm9udCwgY29sb3VyOiBDb2xvdXIpID0+IHZvaWQ7XHJcbn1cclxuXHJcbmludGVyZmFjZSBUaW1lciBleHRlbmRzIE9ic2VydmFibGUge1xyXG5cdHN0YXRlOiBUaW1lclN0YXRlO1xyXG5cdHN0YXJ0OiAoKSA9PiB2b2lkO1xyXG5cdHBhdXNlOiAoKSA9PiB2b2lkO1xyXG5cdHJlc3RhcnQ6ICgpID0+IHZvaWQ7XHJcblx0c2V0VGltZTogKHRpbWU6IG51bWJlcikgPT4gdm9pZDtcclxuXHRnZXRUaW1lOiAoKSA9PiBudW1iZXI7XHJcblx0Z2V0Q3VycmVudFRpbWU6ICgpID0+IG51bWJlcjtcclxuXHRnZXRTdGF0ZTogKCkgPT4gVGltZXJTdGF0ZTtcclxuXHRzZXRTdGF0ZTogKHN0YXRlOiBUaW1lclN0YXRlKSA9PiB2b2lkO1xyXG59XHJcblxyXG5pbnRlcmZhY2UgVGltZXJDb250cm9sbGVyIHtcclxuXHRzdGFydFRpbWVyOiAoKSA9PiB2b2lkO1xyXG5cdHBhdXNlVGltZXI6ICgpID0+IHZvaWQ7XHJcblx0cmVzdGFydFRpbWVyOiAoKSA9PiB2b2lkO1xyXG5cdHNldFRpbWU6ICh0aW1lOiBudW1iZXIpID0+IHZvaWQ7XHJcbn1cclxuXHJcbi8qIGNsYXNzZXMgKi9cclxuY2xhc3MgQXBwVGhlbWUgaW1wbGVtZW50cyBUaGVtZSB7XHJcblx0Y29sb3VyOiBDb2xvdXIgPSBERUZBVUxUX0NPTE9VUjtcclxuXHRmb250OiBGb250ID0gREVGQVVMVF9GT05UO1xyXG5cclxuXHR1cGRhdGVUaGVtZSA9IChmb250OiBGb250LCBjb2xvdXI6IENvbG91cik6IHZvaWQgPT4ge1xyXG5cdFx0dGhpcy5jb2xvdXIgPSBjb2xvdXI7XHJcblx0XHR0aGlzLmZvbnQgPSBmb250O1xyXG5cdFx0ZG9jdW1lbnQuYm9keS5kYXRhc2V0LmZvbnQgPSBmb250O1xyXG5cdFx0ZG9jdW1lbnQuYm9keS5kYXRhc2V0LnRoZW1lID0gY29sb3VyO1xyXG5cdH07XHJcbn1cclxuXHJcbmNsYXNzIFBvbW9kb3JvVGltZXIgaW1wbGVtZW50cyBUaW1lciB7XHJcblx0b2JzZXJ2ZXJzOiBPYnNlcnZlcltdID0gW107XHJcblx0Y291bnRUaW1lb3V0OiBOb2RlSlMuVGltZW91dDtcclxuXHRzdGF0ZTogVGltZXJTdGF0ZSA9ICdJTklUSUFMJztcclxuXHJcblx0cHJpdmF0ZSBjb3VudGluZ1RpbWU6IG51bWJlcjtcclxuXHRwcml2YXRlIGJhc2VUaW1lOiBudW1iZXI7XHJcblxyXG5cdGNvbnN0cnVjdG9yKHRpbWU6IG51bWJlciA9IDApIHtcclxuXHRcdHRoaXMuYmFzZVRpbWUgPSB0aW1lO1xyXG5cdFx0dGhpcy5jb3VudGluZ1RpbWUgPSB0aW1lO1xyXG5cdH1cclxuXHJcblx0c3RhcnQgPSAoKTogdm9pZCA9PiB7XHJcblx0XHR0aGlzLnNldFN0YXRlKCdDT1VOVElORycpO1xyXG5cdFx0dGhpcy5jb3VudCgpO1xyXG5cdH07XHJcblxyXG5cdGNvdW50ID0gKCk6IHZvaWQgPT4ge1xyXG5cdFx0aWYgKHRoaXMuY291bnRpbmdUaW1lID09PSAwKSB7XHJcblx0XHRcdHRoaXMuc2V0U3RhdGUoJ0VORCcpO1xyXG5cdFx0XHRjbGVhclRpbWVvdXQodGhpcy5jb3VudFRpbWVvdXQpO1xyXG5cdFx0XHRyZXR1cm47XHJcblx0XHR9XHJcblxyXG5cdFx0dGhpcy5jb3VudFRpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IHtcclxuXHRcdFx0dGhpcy51cGRhdGVUaW1lKCk7XHJcblx0XHRcdHRoaXMuY291bnQoKTtcclxuXHRcdH0sIDEwMDApO1xyXG5cdH07XHJcblxyXG5cdHBhdXNlID0gKCk6IHZvaWQgPT4ge1xyXG5cdFx0dGhpcy5zZXRTdGF0ZSgnUEFVU0VEJyk7XHJcblx0XHRjbGVhclRpbWVvdXQodGhpcy5jb3VudFRpbWVvdXQpO1xyXG5cdH07XHJcblxyXG5cdHJlc3RhcnQgPSAoKTogdm9pZCA9PiB7XHJcblx0XHR0aGlzLnNldFN0YXRlKCdJTklUSUFMJyk7XHJcblx0XHR0aGlzLnNldFRpbWUodGhpcy5iYXNlVGltZSk7XHJcblx0XHRjbGVhclRpbWVvdXQodGhpcy5jb3VudFRpbWVvdXQpO1xyXG5cdH07XHJcblxyXG5cdGdldFRpbWUgPSAoKTogbnVtYmVyID0+IHRoaXMuYmFzZVRpbWU7XHJcblxyXG5cdGdldEN1cnJlbnRUaW1lID0gKCk6IG51bWJlciA9PiB0aGlzLmNvdW50aW5nVGltZTtcclxuXHJcblx0c2V0VGltZSA9ICh0aW1lOiBudW1iZXIpOiB2b2lkID0+IHtcclxuXHRcdHRoaXMuYmFzZVRpbWUgPSB0aW1lO1xyXG5cdFx0dGhpcy5jb3VudGluZ1RpbWUgPSB0aW1lO1xyXG5cdFx0dGhpcy5ub3RpZnlPYnNlcnZlcnMoKTtcclxuXHR9O1xyXG5cclxuXHR1cGRhdGVUaW1lID0gKCk6IHZvaWQgPT4ge1xyXG5cdFx0dGhpcy5jb3VudGluZ1RpbWUtLTtcclxuXHRcdHRoaXMubm90aWZ5T2JzZXJ2ZXJzKCk7XHJcblx0fTtcclxuXHJcblx0Z2V0U3RhdGUgPSAoKTogVGltZXJTdGF0ZSA9PiB0aGlzLnN0YXRlO1xyXG5cclxuXHRzZXRTdGF0ZSA9IChzdGF0ZTogVGltZXJTdGF0ZSk6IHZvaWQgPT4ge1xyXG5cdFx0dGhpcy5zdGF0ZSA9IHN0YXRlO1xyXG5cclxuXHRcdGlmICh0aGlzLnN0YXRlID09PSAnRU5EJykgdGhpcy5ub3RpZnlPYnNlcnZlcnMoKTtcclxuXHR9O1xyXG5cclxuXHQvKiBvYnNlcnZlciBpbXBsZW1lbnRhdGlvbiAqL1xyXG5cdGFkZE9ic2VydmVyID0gKG9ic2VydmVyOiBPYnNlcnZlcik6IHZvaWQgPT4ge1xyXG5cdFx0dGhpcy5vYnNlcnZlcnMucHVzaChvYnNlcnZlcik7XHJcblx0fTtcclxuXHJcblx0bm90aWZ5T2JzZXJ2ZXJzID0gKCk6IHZvaWQgPT4ge1xyXG5cdFx0dGhpcy5vYnNlcnZlcnMuZm9yRWFjaChvYnNlcnZlciA9PiBvYnNlcnZlci51cGRhdGUodGhpcykpO1xyXG5cdH07XHJcbn1cclxuXHJcbmNsYXNzIFRpbWVyVmlldyBpbXBsZW1lbnRzIE9ic2VydmVyIHtcclxuXHRwcml2YXRlIHRpbWVyOiBIVE1MRWxlbWVudDtcclxuXHRwcml2YXRlIHRpbWVQcm9ncmVzc0JhcjogSFRNTEVsZW1lbnQ7XHJcblx0cHJpdmF0ZSB0aW1lclRpbWU6IEhUTUxFbGVtZW50O1xyXG5cdHByaXZhdGUgdGltZXJCdXR0b246IEhUTUxCdXR0b25FbGVtZW50O1xyXG5cclxuXHRjb25zdHJ1Y3RvcihidXR0b25PbkNsaWNrOiAoZTogRXZlbnQpID0+IHZvaWQpIHtcclxuXHRcdHRoaXMudGltZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudGltZXInKTtcclxuXHRcdHRoaXMudGltZVByb2dyZXNzQmFyID0gdGhpcy50aW1lci5xdWVyeVNlbGVjdG9yKCcjcHJvZ3Jlc3MtYmFyJyk7XHJcblx0XHR0aGlzLnRpbWVyVGltZSA9IHRoaXMudGltZXIucXVlcnlTZWxlY3RvcignI3RpbWVyLXRpbWUnKTtcclxuXHRcdHRoaXMudGltZXJCdXR0b24gPSB0aGlzLnRpbWVyLnF1ZXJ5U2VsZWN0b3IoJyN0aW1lci1idXR0b24nKTtcclxuXHRcdHRoaXMudGltZXJCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBidXR0b25PbkNsaWNrKTtcclxuXHR9XHJcblxyXG5cdHVwZGF0ZSA9IChvYnNlcnZhYmxlOiBPYnNlcnZhYmxlKTogdm9pZCA9PiB7XHJcblx0XHRjb25zdCBvYnM6IFRpbWVyID0gb2JzZXJ2YWJsZSBhcyBUaW1lcjtcclxuXHRcdHRoaXMudXBkYXRlVGltZShvYnMuZ2V0Q3VycmVudFRpbWUoKSk7XHJcblx0XHR0aGlzLnVwZGF0ZVByb2dyZXNzQmFyKG9icy5nZXRDdXJyZW50VGltZSgpLCBvYnMuZ2V0VGltZSgpKTtcclxuXHJcblx0XHRpZiAob2JzLmdldFN0YXRlKCkgPT09ICdFTkQnKSB7XHJcblx0XHRcdHRoaXMudXBkYXRlQnV0dG9uTGFiZWwoJ3Jlc3RhcnQnKTtcclxuXHRcdFx0dGhpcy51cGRhdGVUaW1lQW5ub3VuY2VtZW50KCdwb2xpdGUnKTtcclxuXHRcdFx0dGhpcy5yZXNldFByb2dyZXNzQmFyKCk7XHJcblx0XHR9XHJcblx0fTtcclxuXHJcblx0dXBkYXRlQnV0dG9uTGFiZWwgPSAobGFiZWw6IHN0cmluZyk6IHZvaWQgPT4ge1xyXG5cdFx0dGhpcy50aW1lckJ1dHRvbi5pbm5lclRleHQgPSBsYWJlbDtcclxuXHR9O1xyXG5cclxuXHR1cGRhdGVUaW1lID0gKHRpbWU6IG51bWJlcik6IHZvaWQgPT4ge1xyXG5cdFx0dGhpcy50aW1lclRpbWUuaW5uZXJIVE1MID0gZm9ybWF0VGltZSh0aW1lKTtcclxuXHR9O1xyXG5cclxuXHR1cGRhdGVQcm9ncmVzc0JhciA9IChjdXJyZW50OiBudW1iZXIsIGJhc2U6IG51bWJlcik6IHZvaWQgPT4ge1xyXG5cdFx0Y29uc3QgY2lyY3VtZmVyZW5jZTogbnVtYmVyID0gTnVtYmVyKGdldENvbXB1dGVkU3R5bGUodGhpcy50aW1lUHJvZ3Jlc3NCYXIpLmdldFByb3BlcnR5VmFsdWUoJy0tY2lyY3VtZmVyZW5jZScpKTtcclxuXHRcdHRoaXMudGltZVByb2dyZXNzQmFyLnN0eWxlLnNldFByb3BlcnR5KCctLXByb2dyZXNzJywgKCgxIC0gY3VycmVudCAvIGJhc2UpICogY2lyY3VtZmVyZW5jZSkudG9GaXhlZCgwKSk7XHJcblx0fTtcclxuXHJcblx0dXBkYXRlVGltZUFubm91bmNlbWVudCA9ICh2YWx1ZTogc3RyaW5nID0gJ29mZicpOiB2b2lkID0+IHtcclxuXHRcdHRoaXMudGltZXJUaW1lLnNldEF0dHJpYnV0ZSgnYXJpYS1saXZlJywgdmFsdWUpO1xyXG5cdH07XHJcblxyXG5cdHJlc2V0UHJvZ3Jlc3NCYXIgPSAoKTogdm9pZCA9PiB7XHJcblx0XHR0aGlzLnRpbWVQcm9ncmVzc0Jhci5zdHlsZS5zZXRQcm9wZXJ0eSgnLS1wcm9ncmVzcycsICcwJyk7XHJcblx0fTtcclxufVxyXG5cclxuY2xhc3MgUG9tb2Rvcm9UaW1lckNvbnRyb2xsZXIgaW1wbGVtZW50cyBUaW1lckNvbnRyb2xsZXIge1xyXG5cdHByaXZhdGUgdGltZXI6IFRpbWVyO1xyXG5cdHByaXZhdGUgdmlldzogVGltZXJWaWV3O1xyXG5cdGNvbnN0cnVjdG9yKHRpbWVyOiBUaW1lcikge1xyXG5cdFx0dGhpcy50aW1lciA9IHRpbWVyO1xyXG5cdFx0dGhpcy52aWV3ID0gbmV3IFRpbWVyVmlldyh0aGlzLnRpbWVyQWN0aW9uKTtcclxuXHJcblx0XHR0aW1lci5hZGRPYnNlcnZlcih0aGlzLnZpZXcpO1xyXG5cdH1cclxuXHJcblx0dGltZXJBY3Rpb24gPSAoKTogdm9pZCA9PiB7XHJcblx0XHRzd2l0Y2ggKHRoaXMudGltZXIuZ2V0U3RhdGUoKSkge1xyXG5cdFx0XHRjYXNlICdJTklUSUFMJzpcclxuXHRcdFx0Y2FzZSAnUEFVU0VEJzpcclxuXHRcdFx0XHR0aGlzLnN0YXJ0VGltZXIoKTtcclxuXHRcdFx0XHRicmVhaztcclxuXHRcdFx0Y2FzZSAnQ09VTlRJTkcnOlxyXG5cdFx0XHRcdHRoaXMucGF1c2VUaW1lcigpO1xyXG5cdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHRjYXNlICdFTkQnOlxyXG5cdFx0XHRcdHRoaXMucmVzdGFydFRpbWVyKCk7XHJcblx0XHR9XHJcblx0fTtcclxuXHJcblx0c3RhcnRUaW1lciA9ICgpOiB2b2lkID0+IHtcclxuXHRcdHRoaXMudGltZXIuc3RhcnQoKTtcclxuXHRcdHRoaXMudmlldy51cGRhdGVCdXR0b25MYWJlbCgncGF1c2UnKTtcclxuXHR9O1xyXG5cclxuXHRwYXVzZVRpbWVyID0gKCk6IHZvaWQgPT4ge1xyXG5cdFx0dGhpcy50aW1lci5wYXVzZSgpO1xyXG5cdFx0dGhpcy52aWV3LnVwZGF0ZUJ1dHRvbkxhYmVsKCdzdGFydCcpO1xyXG5cdH07XHJcblxyXG5cdHJlc3RhcnRUaW1lciA9ICgpOiB2b2lkID0+IHtcclxuXHRcdHRoaXMudGltZXIucmVzdGFydCgpO1xyXG5cdFx0dGhpcy52aWV3LnVwZGF0ZUJ1dHRvbkxhYmVsKCdzdGFydCcpO1xyXG5cdFx0dGhpcy52aWV3LnVwZGF0ZVRpbWVBbm5vdW5jZW1lbnQoKTtcclxuXHR9O1xyXG5cclxuXHRzZXRUaW1lID0gKHRpbWU6IG51bWJlcik6IHZvaWQgPT4ge1xyXG5cdFx0dGhpcy50aW1lci5zZXRUaW1lKHRpbWUpO1xyXG5cdH07XHJcbn1cclxuXHJcbmNsYXNzIFBvbW9kb3JvQXBwIHtcclxuXHRwcml2YXRlIHRpbWVyQ29udHJvbGxlcjogVGltZXJDb250cm9sbGVyO1xyXG5cdHByaXZhdGUgYXBwU3RhdGU6IFBvbW9kb3JvQXBwU3RhdGVzID0gJ1BPTU9ET1JPJztcclxuXHJcblx0cHJpdmF0ZSBwb21vZG9yb1RpbWU6IG51bWJlcjtcclxuXHRwcml2YXRlIHNob3J0QnJlYWtUaW1lOiBudW1iZXI7XHJcblx0cHJpdmF0ZSBsb25nQnJlYWtUaW1lOiBudW1iZXI7XHJcblxyXG5cdGNvbnN0cnVjdG9yKFxyXG5cdFx0cG9tb2Rvcm9UaW1lOiBudW1iZXIgPSBERUZBVUxUX1BPTU9ET1JPX1RJTUUsXHJcblx0XHRzaG9ydEJyZWFrVGltZTogbnVtYmVyID0gREVGQVVMVF9TSE9SVF9CUkVBS19USU1FLFxyXG5cdFx0bG9uZ0JyZWFrVGltZTogbnVtYmVyID0gREVGQVVMVF9MT05HX0JSRUFLX1RJTUVcclxuXHQpIHtcclxuXHRcdHRoaXMudGltZXJDb250cm9sbGVyID0gbmV3IFBvbW9kb3JvVGltZXJDb250cm9sbGVyKG5ldyBQb21vZG9yb1RpbWVyKCkpO1xyXG5cdFx0dGhpcy5zZXRUaW1lcyhwb21vZG9yb1RpbWUsIHNob3J0QnJlYWtUaW1lLCBsb25nQnJlYWtUaW1lKTtcclxuXHR9XHJcblxyXG5cdHNldFRpbWVzID0gKHBvbW9kb3JvOiBudW1iZXIsIHNob3J0QnJlYWs6IG51bWJlciwgbG9uZ0JyZWFrOiBudW1iZXIpOiB2b2lkID0+IHtcclxuXHRcdHRoaXMucG9tb2Rvcm9UaW1lID0gcG9tb2Rvcm87XHJcblx0XHR0aGlzLnNob3J0QnJlYWtUaW1lID0gc2hvcnRCcmVhaztcclxuXHRcdHRoaXMubG9uZ0JyZWFrVGltZSA9IGxvbmdCcmVhaztcclxuXHRcdHRoaXMuY2hhbmdlU3RhdGUodGhpcy5hcHBTdGF0ZSk7XHJcblx0fTtcclxuXHJcblx0Y2hhbmdlU3RhdGUgPSAoc3RhdGU6IFBvbW9kb3JvQXBwU3RhdGVzKTogdm9pZCA9PiB7XHJcblx0XHR0aGlzLmFwcFN0YXRlID0gc3RhdGU7XHJcblx0XHR0aGlzLnRpbWVyQ29udHJvbGxlci5yZXN0YXJ0VGltZXIoKTtcclxuXHRcdHRoaXMuc2V0VGltZXJCYXNlZE9uU3RhdGUoKTtcclxuXHR9O1xyXG5cclxuXHRzZXRUaW1lckJhc2VkT25TdGF0ZSA9ICgpOiB2b2lkID0+IHtcclxuXHRcdHN3aXRjaCAodGhpcy5hcHBTdGF0ZSkge1xyXG5cdFx0XHRjYXNlICdQT01PRE9STyc6XHJcblx0XHRcdFx0dGhpcy50aW1lckNvbnRyb2xsZXIuc2V0VGltZShtaW51dGVzVG9TZWNvbmRzKHRoaXMucG9tb2Rvcm9UaW1lKSk7XHJcblx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdGNhc2UgJ1NIT1JUX0JSRUFLJzpcclxuXHRcdFx0XHR0aGlzLnRpbWVyQ29udHJvbGxlci5zZXRUaW1lKG1pbnV0ZXNUb1NlY29uZHModGhpcy5zaG9ydEJyZWFrVGltZSkpO1xyXG5cdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHRjYXNlICdMT05HX0JSRUFLJzpcclxuXHRcdFx0XHR0aGlzLnRpbWVyQ29udHJvbGxlci5zZXRUaW1lKG1pbnV0ZXNUb1NlY29uZHModGhpcy5sb25nQnJlYWtUaW1lKSk7XHJcblx0XHRcdFx0YnJlYWs7XHJcblx0XHR9XHJcblx0fTtcclxufVxyXG5cclxuY29uc3QgYXBwVGhlbWU6IFRoZW1lID0gbmV3IEFwcFRoZW1lKCk7XHJcbmNvbnN0IHBvbW9kb3JvQXBwOiBQb21vZG9yb0FwcCA9IG5ldyBQb21vZG9yb0FwcCgpO1xyXG5cclxuLyogZXZlbnQgbGlzdGVuZXJzICovXHJcbnNldHRpbmdzU3VibWl0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGU6IEV2ZW50KSA9PiB7XHJcblx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuXHRjb25zdCBwb21vZG9yb1RpbWUgPSBOdW1iZXIocG9tb2Rvcm9UaW1lSW5wdXQudmFsdWUpO1xyXG5cdGNvbnN0IHNob3J0QnJlYWtUaW1lID0gTnVtYmVyKHNob3J0QnJlYWtUaW1lSW5wdXQudmFsdWUpO1xyXG5cdGNvbnN0IGxvbmdCcmVha1RpbWUgPSBOdW1iZXIobG9uZ0JyZWFrVGltZUlucHV0LnZhbHVlKTtcclxuXHRjb25zdCBjaG9zZW5Gb250OiBGb250ID0gZm9udFJhZGlvQnV0dG9ucy5maW5kKGJ1dHRvbiA9PiBidXR0b24uY2hlY2tlZCkudmFsdWUgYXMgRm9udDtcclxuXHRjb25zdCBjaG9zZW5Db2xvdXI6IENvbG91ciA9IGNvbG91clJhZGlvQnV0dG9ucy5maW5kKGJ1dHRvbiA9PiBidXR0b24uY2hlY2tlZCkudmFsdWUgYXMgQ29sb3VyO1xyXG5cclxuXHRwb21vZG9yb0FwcC5zZXRUaW1lcyhwb21vZG9yb1RpbWUsIHNob3J0QnJlYWtUaW1lLCBsb25nQnJlYWtUaW1lKTtcclxuXHRhcHBUaGVtZS51cGRhdGVUaGVtZShjaG9zZW5Gb250LCBjaG9zZW5Db2xvdXIpO1xyXG5cdGNsb3NlTW9kYWwoKTtcclxufSk7XHJcblxyXG5zZXR0aW5nc0J1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIG9wZW5Nb2RhbCk7XHJcblxyXG5jbG9zZU1vZGFsQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgY2xvc2VNb2RhbCk7XHJcblxyXG50aW1lU3RhdGVCdXR0b25zLmZvckVhY2goYnV0dG9uID0+XHJcblx0YnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGU6IEV2ZW50KSA9PiB7XHJcblx0XHRjb25zdCBidXR0b246IEhUTUxCdXR0b25FbGVtZW50ID0gZS50YXJnZXQgYXMgSFRNTEJ1dHRvbkVsZW1lbnQ7XHJcblx0XHRjb25zdCBzdGF0ZTogUG9tb2Rvcm9BcHBTdGF0ZXMgPSBidXR0b24uZGF0YXNldC5zdGF0ZS50b1VwcGVyQ2FzZSgpIGFzIFBvbW9kb3JvQXBwU3RhdGVzO1xyXG5cdFx0YWN0aXZhdGVTdGF0ZUJ1dHRvbihidXR0b24pO1xyXG5cdFx0cG9tb2Rvcm9BcHAuY2hhbmdlU3RhdGUoc3RhdGUpO1xyXG5cdH0pXHJcbik7XHJcblxyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgKGU6IEtleWJvYXJkRXZlbnQpID0+IHtcclxuXHRjb25zdCBpc1RhYjogYm9vbGVhbiA9IGUua2V5ID09PSAnVGFiJztcclxuXHJcblx0aWYgKCFpc1RhYikgcmV0dXJuO1xyXG5cclxuXHRpZiAoZS5zaGlmdEtleSAmJiBkb2N1bWVudC5hY3RpdmVFbGVtZW50ID09PSBjbG9zZU1vZGFsQnV0dG9uKSB7XHJcblx0XHRzZXR0aW5nc1N1Ym1pdC5mb2N1cygpO1xyXG5cdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cdFx0cmV0dXJuO1xyXG5cdH1cclxuXHJcblx0aWYgKCFlLnNoaWZ0S2V5ICYmIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgPT09IHNldHRpbmdzU3VibWl0KSB7XHJcblx0XHRjbG9zZU1vZGFsQnV0dG9uLmZvY3VzKCk7XHJcblx0XHRlLnByZXZlbnREZWZhdWx0KCk7XHJcblx0fVxyXG59KTtcclxuXHJcbi8qIGhlbHBlciBmdW5jdGlvbnMgKi9cclxuLyogLS0tIHRpbWVyICovXHJcbmZ1bmN0aW9uIG1pbnV0ZXNUb1NlY29uZHMobWludXRlczogbnVtYmVyKTogbnVtYmVyIHtcclxuXHRyZXR1cm4gbWludXRlcyAqIFNFQ09ORFNfSU5fTUlOVVRFO1xyXG59XHJcblxyXG5mdW5jdGlvbiBnZXRNaW51dGVzRnJvbVNlY29uZHMoc2Vjb25kczogbnVtYmVyKTogbnVtYmVyIHtcclxuXHRyZXR1cm4gTWF0aC5mbG9vcihzZWNvbmRzIC8gU0VDT05EU19JTl9NSU5VVEUpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBnZXRSZW1haW5pbmdTZWNvbmRzKHNlY29uZHM6IG51bWJlcik6IG51bWJlciB7XHJcblx0cmV0dXJuIHNlY29uZHMgJSBTRUNPTkRTX0lOX01JTlVURTtcclxufVxyXG5cclxuZnVuY3Rpb24gYWRkTGVhZGluZ1plcm8odGltZTogbnVtYmVyKTogc3RyaW5nIHtcclxuXHRyZXR1cm4gdGltZSA8IDEwID8gYDAke3RpbWV9YCA6IHRpbWUudG9TdHJpbmcoKTtcclxufVxyXG5cclxuZnVuY3Rpb24gZm9ybWF0VGltZShzZWNvbmRzOiBudW1iZXIpOiBzdHJpbmcge1xyXG5cdGNvbnN0IG1pbnV0ZXMgPSBnZXRNaW51dGVzRnJvbVNlY29uZHMoc2Vjb25kcyk7XHJcblx0Y29uc3QgcmVtYWluaW5nU2Vjb25kcyA9IGdldFJlbWFpbmluZ1NlY29uZHMoc2Vjb25kcyk7XHJcblx0cmV0dXJuIGFkZExlYWRpbmdaZXJvKG1pbnV0ZXMpICsgJzonICsgYWRkTGVhZGluZ1plcm8ocmVtYWluaW5nU2Vjb25kcyk7XHJcbn1cclxuXHJcbi8qIC0tLSBhcHAgdGltZSBzdGF0ZSBidXR0b25zIGZ1bmN0aW9uICovXHJcbmZ1bmN0aW9uIGFjdGl2YXRlU3RhdGVCdXR0b24oYnV0dG9uOiBIVE1MQnV0dG9uRWxlbWVudCkge1xyXG5cdHRpbWVTdGF0ZUJ1dHRvbnMuZm9yRWFjaChidXR0b24gPT4gYnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpKTtcclxuXHRidXR0b24uY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XHJcbn1cclxuXHJcbi8qIC0tLSBtb2RhbCAqL1xyXG5mdW5jdGlvbiBvcGVuTW9kYWwoKSB7XHJcblx0c2V0dGluZ3NNb2RhbC5kYXRhc2V0Lm9wZW4gPSAndHJ1ZSc7XHJcblx0Y2xvc2VNb2RhbEJ1dHRvbi5mb2N1cygpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBjbG9zZU1vZGFsKCkge1xyXG5cdHNldHRpbmdzTW9kYWwuZGF0YXNldC5vcGVuID0gJ2ZhbHNlJztcclxuXHRzZXR0aW5nc0J1dHRvbi5mb2N1cygpO1xyXG59XHJcbiJdfQ==
