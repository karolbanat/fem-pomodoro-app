"use strict";function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _defineProperties(t,e){for(var o=0;o<e.length;o++){var r=e[o];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,_toPropertyKey(r.key),r)}}function _createClass(t,e,o){return e&&_defineProperties(t.prototype,e),o&&_defineProperties(t,o),Object.defineProperty(t,"prototype",{writable:!1}),t}function _toPropertyKey(t){t=_toPrimitive(t,"string");return"symbol"===_typeof(t)?t:String(t)}function _toPrimitive(t,e){if("object"!==_typeof(t)||null===t)return t;var o=t[Symbol.toPrimitive];if(void 0===o)return("string"===e?String:Number)(t);o=o.call(t,e||"default");if("object"!==_typeof(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var settingsButton=document.querySelector("#settings-button"),settingsModal=document.querySelector("#settings-modal"),closeModalButton=document.querySelector("#close-settings-modal-button"),settingsForm=settingsModal.querySelector("#settings-form"),pomodoroTimeInput=settingsForm.querySelector("#pomodoro-time"),shortBreakTimeInput=settingsForm.querySelector("#short-break-time"),longBreakTimeInput=settingsForm.querySelector("#long-break-time"),fontRadioButtons=Array.from(settingsForm.querySelectorAll('input[type="radio"][name="font"]')),colourRadioButtons=Array.from(settingsForm.querySelectorAll('input[type="radio"][name="colour"]')),settingsSubmit=settingsForm.querySelector('button[type="submit"]'),timeStateButtons=Array.from(document.querySelectorAll(".state-button")),SECONDS_IN_MINUTE=60,DEFAULT_FONT="sans-serif",DEFAULT_COLOUR="red",DEFAULT_POMODORO_TIME=25,DEFAULT_SHORT_BREAK_TIME=5,DEFAULT_LONG_BREAK_TIME=15,AppTheme=_createClass(function t(){var o=this;_classCallCheck(this,t),this.colour=DEFAULT_COLOUR,this.font=DEFAULT_FONT,this.updateTheme=function(t,e){o.colour=e,o.font=t,document.body.dataset.font=t,document.body.dataset.theme=e}}),PomodoroTimer=_createClass(function t(){var e=this,o=0<arguments.length&&void 0!==arguments[0]?arguments[0]:0;_classCallCheck(this,t),this.time=o,this.observers=[],this.state="INITIAL",this.start=function(){e.setState("COUNTING"),e.count()},this.count=function(){0===e.getCurrentTime()?(e.setState("END"),clearTimeout(e.countTimeout)):e.countTimeout=setTimeout(function(){e.updateTime(e.getCurrentTime()-1),e.count()},1e3)},this.pause=function(){e.setState("PAUSED"),clearTimeout(e.countTimeout)},this.restart=function(){e.setState("INITIAL"),e.updateTime(e.time),clearTimeout(e.countTimeout)},this.getTime=function(){return e.time},this.getCurrentTime=function(){return e.countingTime},this.setTime=function(t){e.time=t,e.updateTime(e.time)},this.updateTime=function(t){e.countingTime=t,e.notifyObservers()},this.getState=function(){return e.state},this.setState=function(t){e.state=t,"END"===e.state&&e.notifyObservers()},this.addObserver=function(t){e.observers.push(t)},this.notifyObservers=function(){e.observers.forEach(function(t){return t.update(e)})},this.countingTime=o}),TimerView=_createClass(function t(e){var r=this;_classCallCheck(this,t),this.update=function(t){r.updateTime(t.getCurrentTime()),r.updateProgressBar(t.getCurrentTime(),t.getTime()),"END"===t.getState()&&(r.updateButtonLabel("restart"),r.resetProgressBar())},this.updateButtonLabel=function(t){r.timerButton.innerText=t},this.updateTime=function(t){r.timerTime.innerHTML=formatTime(t)},this.updateProgressBar=function(t,e){var o=Number(getComputedStyle(r.timeProgressBar).getPropertyValue("--circumference"));r.timeProgressBar.style.setProperty("--progress",((1-t/e)*o).toFixed(0))},this.resetProgressBar=function(){r.timeProgressBar.style.setProperty("--progress","0")},this.timer=document.querySelector(".timer"),this.timeProgressBar=this.timer.querySelector("#progress-bar"),this.timerTime=this.timer.querySelector("#timer-time"),this.timerButton=this.timer.querySelector("#timer-button"),this.timerButton.addEventListener("click",e)}),TimerController=_createClass(function t(e){var o=this;_classCallCheck(this,t),this.timer=e,this.timerAction=function(){switch(o.timer.getState()){case"INITIAL":case"PAUSED":o.startTimer();break;case"COUNTING":o.pauseTimer();break;case"END":o.restartTimer()}},this.startTimer=function(){o.timer.start(),o.view.updateButtonLabel("pause")},this.pauseTimer=function(){o.timer.pause(),o.view.updateButtonLabel("start")},this.restartTimer=function(){o.timer.restart(),o.view.updateButtonLabel("start")},this.setTime=function(t){o.timer.setTime(t)},this.view=new TimerView(this.timerAction),e.addObserver(this.view),this.view.update(this.timer)}),PomodoroApp=_createClass(function t(){var r=this,e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:DEFAULT_POMODORO_TIME,o=1<arguments.length&&void 0!==arguments[1]?arguments[1]:DEFAULT_SHORT_BREAK_TIME,i=2<arguments.length&&void 0!==arguments[2]?arguments[2]:DEFAULT_LONG_BREAK_TIME;_classCallCheck(this,t),this.pomodoroTime=e,this.shortBreakTime=o,this.longBreakTime=i,this.appState="POMODORO",this.setTimes=function(t,e,o){r.pomodoroTime=t,r.shortBreakTime=e,r.longBreakTime=o,r.changeState(r.appState)},this.changeState=function(t){r.appState=t,r.timer.restartTimer(),r.setTimerBasedOnState()},this.setTimerBasedOnState=function(){switch(r.appState){case"POMODORO":r.timer.setTime(minutesToSeconds(r.pomodoroTime));break;case"SHORT_BREAK":r.timer.setTime(minutesToSeconds(r.shortBreakTime));break;case"LONG_BREAK":r.timer.setTime(minutesToSeconds(r.longBreakTime))}},this.timer=new TimerController(new PomodoroTimer(minutesToSeconds(this.pomodoroTime)))}),appTheme=new AppTheme,pomodoroApp=new PomodoroApp;function minutesToSeconds(t){return t*SECONDS_IN_MINUTE}function getMinutesFromSeconds(t){return Math.floor(t/SECONDS_IN_MINUTE)}function getRemainingSeconds(t){return t%SECONDS_IN_MINUTE}function addLeadingZero(t){return t<10?"0".concat(t):t.toString()}function formatTime(t){var e=getMinutesFromSeconds(t),t=getRemainingSeconds(t);return addLeadingZero(e)+":"+addLeadingZero(t)}function activateStateButton(t){timeStateButtons.forEach(function(t){return t.classList.remove("active")}),t.classList.add("active")}function openModal(){settingsModal.dataset.open="true"}function closeModal(){settingsModal.dataset.open="false"}settingsSubmit.addEventListener("click",function(t){t.preventDefault();var t=Number(pomodoroTimeInput.value),e=Number(shortBreakTimeInput.value),o=Number(longBreakTimeInput.value),r=fontRadioButtons.find(function(t){return t.checked}).value,i=colourRadioButtons.find(function(t){return t.checked}).value;pomodoroApp.setTimes(t,e,o),appTheme.updateTheme(r,i),closeModal()}),settingsButton.addEventListener("click",function(){openModal()}),null!=closeModalButton&&closeModalButton.addEventListener("click",function(){closeModal()}),timeStateButtons.forEach(function(t){return t.addEventListener("click",function(t){var t=t.target,e=t.dataset.state.toUpperCase();activateStateButton(t),pomodoroApp.changeState(e)})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4udHMiXSwibmFtZXMiOlsic2V0dGluZ3NCdXR0b24iLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJzZXR0aW5nc01vZGFsIiwiY2xvc2VNb2RhbEJ1dHRvbiIsInNldHRpbmdzRm9ybSIsInBvbW9kb3JvVGltZUlucHV0Iiwic2hvcnRCcmVha1RpbWVJbnB1dCIsImxvbmdCcmVha1RpbWVJbnB1dCIsImZvbnRSYWRpb0J1dHRvbnMiLCJBcnJheSIsImZyb20iLCJxdWVyeVNlbGVjdG9yQWxsIiwiY29sb3VyUmFkaW9CdXR0b25zIiwic2V0dGluZ3NTdWJtaXQiLCJ0aW1lU3RhdGVCdXR0b25zIiwiU0VDT05EU19JTl9NSU5VVEUiLCJERUZBVUxUX0ZPTlQiLCJERUZBVUxUX0NPTE9VUiIsIkRFRkFVTFRfUE9NT0RPUk9fVElNRSIsIkRFRkFVTFRfU0hPUlRfQlJFQUtfVElNRSIsIkRFRkFVTFRfTE9OR19CUkVBS19USU1FIiwiQXBwVGhlbWUiLCJfY3JlYXRlQ2xhc3MiLCJfdGhpcyIsInRoaXMiLCJfY2xhc3NDYWxsQ2hlY2siLCJjb2xvdXIiLCJmb250IiwidXBkYXRlVGhlbWUiLCJib2R5IiwiZGF0YXNldCIsInRoZW1lIiwiUG9tb2Rvcm9UaW1lciIsIl90aGlzMiIsInRpbWUiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJ1bmRlZmluZWQiLCJvYnNlcnZlcnMiLCJzdGF0ZSIsInN0YXJ0Iiwic2V0U3RhdGUiLCJjb3VudCIsImdldEN1cnJlbnRUaW1lIiwiY2xlYXJUaW1lb3V0IiwiY291bnRUaW1lb3V0Iiwic2V0VGltZW91dCIsInVwZGF0ZVRpbWUiLCJwYXVzZSIsInJlc3RhcnQiLCJnZXRUaW1lIiwiY291bnRpbmdUaW1lIiwic2V0VGltZSIsIm5vdGlmeU9ic2VydmVycyIsImdldFN0YXRlIiwiYWRkT2JzZXJ2ZXIiLCJvYnNlcnZlciIsInB1c2giLCJmb3JFYWNoIiwidXBkYXRlIiwiVGltZXJWaWV3IiwiYnV0dG9uT25DbGljayIsIl90aGlzMyIsIm9ic2VydmFibGUiLCJvYnMiLCJ1cGRhdGVQcm9ncmVzc0JhciIsInVwZGF0ZUJ1dHRvbkxhYmVsIiwicmVzZXRQcm9ncmVzc0JhciIsImxhYmVsIiwidGltZXJCdXR0b24iLCJpbm5lclRleHQiLCJ0aW1lclRpbWUiLCJpbm5lckhUTUwiLCJmb3JtYXRUaW1lIiwiY3VycmVudCIsImJhc2UiLCJjaXJjdW1mZXJlbmNlIiwiTnVtYmVyIiwiZ2V0Q29tcHV0ZWRTdHlsZSIsInRpbWVQcm9ncmVzc0JhciIsImdldFByb3BlcnR5VmFsdWUiLCJzdHlsZSIsInNldFByb3BlcnR5IiwidG9GaXhlZCIsInRpbWVyIiwiYWRkRXZlbnRMaXN0ZW5lciIsIlRpbWVyQ29udHJvbGxlciIsIl90aGlzNCIsInRpbWVyQWN0aW9uIiwic3RhcnRUaW1lciIsInBhdXNlVGltZXIiLCJyZXN0YXJ0VGltZXIiLCJ2aWV3IiwiUG9tb2Rvcm9BcHAiLCJfdGhpczUiLCJwb21vZG9yb1RpbWUiLCJzaG9ydEJyZWFrVGltZSIsImxvbmdCcmVha1RpbWUiLCJhcHBTdGF0ZSIsInNldFRpbWVzIiwicG9tb2Rvcm8iLCJzaG9ydEJyZWFrIiwibG9uZ0JyZWFrIiwiY2hhbmdlU3RhdGUiLCJzZXRUaW1lckJhc2VkT25TdGF0ZSIsIm1pbnV0ZXNUb1NlY29uZHMiLCJhcHBUaGVtZSIsInBvbW9kb3JvQXBwIiwibWludXRlcyIsImdldE1pbnV0ZXNGcm9tU2Vjb25kcyIsInNlY29uZHMiLCJNYXRoIiwiZmxvb3IiLCJnZXRSZW1haW5pbmdTZWNvbmRzIiwiYWRkTGVhZGluZ1plcm8iLCJjb25jYXQiLCJ0b1N0cmluZyIsInJlbWFpbmluZ1NlY29uZHMiLCJhY3RpdmF0ZVN0YXRlQnV0dG9uIiwiYnV0dG9uIiwiY2xhc3NMaXN0IiwicmVtb3ZlIiwiYWRkIiwib3Blbk1vZGFsIiwib3BlbiIsImNsb3NlTW9kYWwiLCJlIiwicHJldmVudERlZmF1bHQiLCJ2YWx1ZSIsImNob3NlbkZvbnQiLCJmaW5kIiwiY2hlY2tlZCIs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Q0FBQSxFQUFFSCxNQUUvRXJCLFlBQVlSLFNBQVNKLEVBQWNDLEVBQWdCQyxDQUFhLEVBQ2hFUyxTQUFTOUUsWUFBWXFHLEVBQVlHLENBQVksRUFDN0NQLFdBQVUsQ0FDWCxDQUFDLEVBRUQ5SCxlQUFlc0YsaUJBQWlCLFFBQVMsV0FDeENzQyxVQUFTLENBQ1YsQ0FBQyxFQUVEeEgsTUFBQUEsa0JBQUFBLGlCQUFrQmtGLGlCQUFpQixRQUFTLFdBQzNDd0MsV0FBVSxDQUNYLENBQUMsRUFFRC9HLGlCQUFpQjRDLFFBQVEsU0FBQTZELEdBQU0sT0FDOUJBLEVBQU9sQyxpQkFBaUIsUUFBUyxTQUFDeUMsR0FDakMsSUFBTVAsRUFBNEJPLEVBQUVPLE9BQzlCOUYsRUFBMkJnRixFQUFPekYsUUFBUVMsTUFBTStGLFlBQVcsRUFDakVoQixvQkFBb0JDLENBQU0sRUFDMUJaLFlBQVlKLFlBQVloRSxDQUFLLENBQzlCLENBQUMsQ0FBQyxDQUFBIiwiZmlsZSI6Im1haW4ubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogbW9kYWwgYW5kIG1vZGFsIHJlYWx0ZWQgZWxlbWVudHMgKi9cclxuY29uc3Qgc2V0dGluZ3NCdXR0b246IEhUTUxCdXR0b25FbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3NldHRpbmdzLWJ1dHRvbicpO1xyXG5jb25zdCBzZXR0aW5nc01vZGFsOiBIVE1MRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNzZXR0aW5ncy1tb2RhbCcpO1xyXG5jb25zdCBjbG9zZU1vZGFsQnV0dG9uOiBIVE1MQnV0dG9uRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNjbG9zZS1zZXR0aW5ncy1tb2RhbC1idXR0b24nKTtcclxuXHJcbi8qIHNldHRpbmdzIGZvcm0gZWxlbWVudHMgKi9cclxuY29uc3Qgc2V0dGluZ3NGb3JtOiBIVE1MRm9ybUVsZW1lbnQgPSBzZXR0aW5nc01vZGFsLnF1ZXJ5U2VsZWN0b3IoJyNzZXR0aW5ncy1mb3JtJyk7XHJcbmNvbnN0IHBvbW9kb3JvVGltZUlucHV0OiBIVE1MSW5wdXRFbGVtZW50ID0gc2V0dGluZ3NGb3JtLnF1ZXJ5U2VsZWN0b3IoJyNwb21vZG9yby10aW1lJyk7XHJcbmNvbnN0IHNob3J0QnJlYWtUaW1lSW5wdXQ6IEhUTUxJbnB1dEVsZW1lbnQgPSBzZXR0aW5nc0Zvcm0ucXVlcnlTZWxlY3RvcignI3Nob3J0LWJyZWFrLXRpbWUnKTtcclxuY29uc3QgbG9uZ0JyZWFrVGltZUlucHV0OiBIVE1MSW5wdXRFbGVtZW50ID0gc2V0dGluZ3NGb3JtLnF1ZXJ5U2VsZWN0b3IoJyNsb25nLWJyZWFrLXRpbWUnKTtcclxuY29uc3QgZm9udFJhZGlvQnV0dG9uczogQXJyYXk8SFRNTElucHV0RWxlbWVudD4gPSBBcnJheS5mcm9tKFxyXG5cdHNldHRpbmdzRm9ybS5xdWVyeVNlbGVjdG9yQWxsKCdpbnB1dFt0eXBlPVwicmFkaW9cIl1bbmFtZT1cImZvbnRcIl0nKVxyXG4pO1xyXG5jb25zdCBjb2xvdXJSYWRpb0J1dHRvbnM6IEFycmF5PEhUTUxJbnB1dEVsZW1lbnQ+ID0gQXJyYXkuZnJvbShcclxuXHRzZXR0aW5nc0Zvcm0ucXVlcnlTZWxlY3RvckFsbCgnaW5wdXRbdHlwZT1cInJhZGlvXCJdW25hbWU9XCJjb2xvdXJcIl0nKVxyXG4pO1xyXG5jb25zdCBzZXR0aW5nc1N1Ym1pdDogSFRNTEJ1dHRvbkVsZW1lbnQgPSBzZXR0aW5nc0Zvcm0ucXVlcnlTZWxlY3RvcignYnV0dG9uW3R5cGU9XCJzdWJtaXRcIl0nKTtcclxuXHJcbi8qIHRpbWUgc3RhdGUgYnV0dG9ucyAqL1xyXG5jb25zdCB0aW1lU3RhdGVCdXR0b25zOiBBcnJheTxIVE1MQnV0dG9uRWxlbWVudD4gPSBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5zdGF0ZS1idXR0b24nKSk7XHJcblxyXG4vKiBjb25zdGFudHMgKi9cclxuLyogLS0tIGdlbmVyYWwgKi9cclxuY29uc3QgU0VDT05EU19JTl9NSU5VVEU6IG51bWJlciA9IDYwO1xyXG4vKiAtLS0gdGhlbWUgKi9cclxuY29uc3QgREVGQVVMVF9GT05UOiBGb250ID0gJ3NhbnMtc2VyaWYnO1xyXG5jb25zdCBERUZBVUxUX0NPTE9VUjogQ29sb3VyID0gJ3JlZCc7XHJcbi8qIC0tLSB0aW1lcyAqL1xyXG5jb25zdCBERUZBVUxUX1BPTU9ET1JPX1RJTUU6IG51bWJlciA9IDI1O1xyXG5jb25zdCBERUZBVUxUX1NIT1JUX0JSRUFLX1RJTUU6IG51bWJlciA9IDU7XHJcbmNvbnN0IERFRkFVTFRfTE9OR19CUkVBS19USU1FOiBudW1iZXIgPSAxNTtcclxuXHJcbi8qIHR5cGVzICovXHJcbnR5cGUgQ29sb3VyID0gJ3JlZCcgfCAnY3lhbicgfCAndmlvbGV0JztcclxudHlwZSBGb250ID0gJ3NlcmlmJyB8ICdzYW5zLXNlcmlmJyB8ICdtb25vc3BhY2UnO1xyXG50eXBlIFRpbWVyU3RhdGUgPSAnSU5JVElBTCcgfCAnQ09VTlRJTkcnIHwgJ1BBVVNFRCcgfCAnRU5EJztcclxudHlwZSBQb21vZG9yb0FwcFN0YXRlcyA9ICdQT01PRE9STycgfCAnU0hPUlRfQlJFQUsnIHwgJ0xPTkdfQlJFQUsnO1xyXG5cclxuLyogaW50ZXJmYWNlcyAqL1xyXG5pbnRlcmZhY2UgT2JzZXJ2YWJsZSB7XHJcblx0YWRkT2JzZXJ2ZXI6IChvYnNlcnZlcjogT2JzZXJ2ZXIpID0+IHZvaWQ7XHJcblx0bm90aWZ5T2JzZXJ2ZXJzOiAoKSA9PiB2b2lkO1xyXG59XHJcblxyXG5pbnRlcmZhY2UgT2JzZXJ2ZXIge1xyXG5cdHVwZGF0ZTogKG9ic2VydmFibGU6IE9ic2VydmFibGUpID0+IHZvaWQ7XHJcbn1cclxuXHJcbmludGVyZmFjZSBUaGVtZSB7XHJcblx0Y29sb3VyOiBDb2xvdXI7XHJcblx0Zm9udDogRm9udDtcclxuXHR1cGRhdGVUaGVtZTogKGZvbnQ6IEZvbnQsIGNvbG91cjogQ29sb3VyKSA9PiB2b2lkO1xyXG59XHJcblxyXG5pbnRlcmZhY2UgVGltZXIgZXh0ZW5kcyBPYnNlcnZhYmxlIHtcclxuXHRzdGF0ZTogVGltZXJTdGF0ZTtcclxuXHRzdGFydDogKCkgPT4gdm9pZDtcclxuXHRwYXVzZTogKCkgPT4gdm9pZDtcclxuXHRyZXN0YXJ0OiAoKSA9PiB2b2lkO1xyXG5cdHNldFRpbWU6ICh0aW1lOiBudW1iZXIpID0+IHZvaWQ7XHJcblx0Z2V0VGltZTogKCkgPT4gbnVtYmVyO1xyXG5cdGdldEN1cnJlbnRUaW1lOiAoKSA9PiBudW1iZXI7XHJcblx0Z2V0U3RhdGU6ICgpID0+IFRpbWVyU3RhdGU7XHJcblx0c2V0U3RhdGU6IChzdGF0ZTogVGltZXJTdGF0ZSkgPT4gdm9pZDtcclxufVxyXG5cclxuLyogY2xhc3NlcyAqL1xyXG5jbGFzcyBBcHBUaGVtZSBpbXBsZW1lbnRzIFRoZW1lIHtcclxuXHRjb2xvdXI6IENvbG91ciA9IERFRkFVTFRfQ09MT1VSO1xyXG5cdGZvbnQ6IEZvbnQgPSBERUZBVUxUX0ZPTlQ7XHJcblxyXG5cdHVwZGF0ZVRoZW1lID0gKGZvbnQ6IEZvbnQsIGNvbG91cjogQ29sb3VyKTogdm9pZCA9PiB7XHJcblx0XHR0aGlzLmNvbG91ciA9IGNvbG91cjtcclxuXHRcdHRoaXMuZm9udCA9IGZvbnQ7XHJcblx0XHRkb2N1bWVudC5ib2R5LmRhdGFzZXQuZm9udCA9IGZvbnQ7XHJcblx0XHRkb2N1bWVudC5ib2R5LmRhdGFzZXQudGhlbWUgPSBjb2xvdXI7XHJcblx0fTtcclxufVxyXG5cclxuY2xhc3MgUG9tb2Rvcm9UaW1lciBpbXBsZW1lbnRzIFRpbWVyIHtcclxuXHRvYnNlcnZlcnM6IE9ic2VydmVyW10gPSBbXTtcclxuXHRjb3VudFRpbWVvdXQ6IE5vZGVKUy5UaW1lb3V0O1xyXG5cdHN0YXRlOiBUaW1lclN0YXRlID0gJ0lOSVRJQUwnO1xyXG5cdHByaXZhdGUgY291bnRpbmdUaW1lOiBudW1iZXI7XHJcblxyXG5cdGNvbnN0cnVjdG9yKHByaXZhdGUgdGltZTogbnVtYmVyID0gMCkge1xyXG5cdFx0dGhpcy5jb3VudGluZ1RpbWUgPSB0aW1lO1xyXG5cdH1cclxuXHJcblx0c3RhcnQgPSAoKTogdm9pZCA9PiB7XHJcblx0XHR0aGlzLnNldFN0YXRlKCdDT1VOVElORycpO1xyXG5cdFx0dGhpcy5jb3VudCgpO1xyXG5cdH07XHJcblxyXG5cdGNvdW50ID0gKCk6IHZvaWQgPT4ge1xyXG5cdFx0aWYgKHRoaXMuZ2V0Q3VycmVudFRpbWUoKSA9PT0gMCkge1xyXG5cdFx0XHR0aGlzLnNldFN0YXRlKCdFTkQnKTtcclxuXHRcdFx0Y2xlYXJUaW1lb3V0KHRoaXMuY291bnRUaW1lb3V0KTtcclxuXHRcdFx0cmV0dXJuO1xyXG5cdFx0fVxyXG5cclxuXHRcdHRoaXMuY291bnRUaW1lb3V0ID0gc2V0VGltZW91dCgoKSA9PiB7XHJcblx0XHRcdHRoaXMudXBkYXRlVGltZSh0aGlzLmdldEN1cnJlbnRUaW1lKCkgLSAxKTtcclxuXHRcdFx0dGhpcy5jb3VudCgpO1xyXG5cdFx0fSwgMTAwMCk7XHJcblx0fTtcclxuXHJcblx0cGF1c2UgPSAoKTogdm9pZCA9PiB7XHJcblx0XHR0aGlzLnNldFN0YXRlKCdQQVVTRUQnKTtcclxuXHRcdGNsZWFyVGltZW91dCh0aGlzLmNvdW50VGltZW91dCk7XHJcblx0fTtcclxuXHJcblx0cmVzdGFydCA9ICgpOiB2b2lkID0+IHtcclxuXHRcdHRoaXMuc2V0U3RhdGUoJ0lOSVRJQUwnKTtcclxuXHRcdHRoaXMudXBkYXRlVGltZSh0aGlzLnRpbWUpO1xyXG5cdFx0Y2xlYXJUaW1lb3V0KHRoaXMuY291bnRUaW1lb3V0KTtcclxuXHR9O1xyXG5cclxuXHRnZXRUaW1lID0gKCk6IG51bWJlciA9PiB0aGlzLnRpbWU7XHJcblxyXG5cdGdldEN1cnJlbnRUaW1lID0gKCk6IG51bWJlciA9PiB0aGlzLmNvdW50aW5nVGltZTtcclxuXHJcblx0c2V0VGltZSA9ICh0aW1lOiBudW1iZXIpOiB2b2lkID0+IHtcclxuXHRcdHRoaXMudGltZSA9IHRpbWU7XHJcblx0XHR0aGlzLnVwZGF0ZVRpbWUodGhpcy50aW1lKTtcclxuXHR9O1xyXG5cclxuXHR1cGRhdGVUaW1lID0gKHRpbWU6IG51bWJlcik6IHZvaWQgPT4ge1xyXG5cdFx0dGhpcy5jb3VudGluZ1RpbWUgPSB0aW1lO1xyXG5cdFx0dGhpcy5ub3RpZnlPYnNlcnZlcnMoKTtcclxuXHR9O1xyXG5cclxuXHRnZXRTdGF0ZSA9ICgpOiBUaW1lclN0YXRlID0+IHRoaXMuc3RhdGU7XHJcblxyXG5cdHNldFN0YXRlID0gKHN0YXRlOiBUaW1lclN0YXRlKTogdm9pZCA9PiB7XHJcblx0XHR0aGlzLnN0YXRlID0gc3RhdGU7XHJcblxyXG5cdFx0aWYgKHRoaXMuc3RhdGUgPT09ICdFTkQnKSB0aGlzLm5vdGlmeU9ic2VydmVycygpO1xyXG5cdH07XHJcblxyXG5cdGFkZE9ic2VydmVyID0gKG9ic2VydmVyOiBPYnNlcnZlcik6IHZvaWQgPT4ge1xyXG5cdFx0dGhpcy5vYnNlcnZlcnMucHVzaChvYnNlcnZlcik7XHJcblx0fTtcclxuXHJcblx0bm90aWZ5T2JzZXJ2ZXJzID0gKCk6IHZvaWQgPT4ge1xyXG5cdFx0dGhpcy5vYnNlcnZlcnMuZm9yRWFjaChvYnNlcnZlciA9PiBvYnNlcnZlci51cGRhdGUodGhpcykpO1xyXG5cdH07XHJcbn1cclxuXHJcbmNsYXNzIFRpbWVyVmlldyBpbXBsZW1lbnRzIE9ic2VydmVyIHtcclxuXHRwcml2YXRlIHRpbWVyOiBIVE1MRWxlbWVudDtcclxuXHRwcml2YXRlIHRpbWVQcm9ncmVzc0JhcjogSFRNTEVsZW1lbnQ7XHJcblx0cHJpdmF0ZSB0aW1lclRpbWU6IEhUTUxFbGVtZW50O1xyXG5cdHByaXZhdGUgdGltZXJCdXR0b246IEhUTUxCdXR0b25FbGVtZW50O1xyXG5cclxuXHRjb25zdHJ1Y3RvcihidXR0b25PbkNsaWNrOiAoZTogRXZlbnQpID0+IHZvaWQpIHtcclxuXHRcdHRoaXMudGltZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudGltZXInKTtcclxuXHRcdHRoaXMudGltZVByb2dyZXNzQmFyID0gdGhpcy50aW1lci5xdWVyeVNlbGVjdG9yKCcjcHJvZ3Jlc3MtYmFyJyk7XHJcblx0XHR0aGlzLnRpbWVyVGltZSA9IHRoaXMudGltZXIucXVlcnlTZWxlY3RvcignI3RpbWVyLXRpbWUnKTtcclxuXHRcdHRoaXMudGltZXJCdXR0b24gPSB0aGlzLnRpbWVyLnF1ZXJ5U2VsZWN0b3IoJyN0aW1lci1idXR0b24nKTtcclxuXHRcdHRoaXMudGltZXJCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBidXR0b25PbkNsaWNrKTtcclxuXHR9XHJcblxyXG5cdHVwZGF0ZSA9IChvYnNlcnZhYmxlOiBPYnNlcnZhYmxlKTogdm9pZCA9PiB7XHJcblx0XHRjb25zdCBvYnM6IFRpbWVyID0gb2JzZXJ2YWJsZSBhcyBUaW1lcjtcclxuXHRcdHRoaXMudXBkYXRlVGltZShvYnMuZ2V0Q3VycmVudFRpbWUoKSk7XHJcblx0XHR0aGlzLnVwZGF0ZVByb2dyZXNzQmFyKG9icy5nZXRDdXJyZW50VGltZSgpLCBvYnMuZ2V0VGltZSgpKTtcclxuXHJcblx0XHRpZiAob2JzLmdldFN0YXRlKCkgPT09ICdFTkQnKSB7XHJcblx0XHRcdHRoaXMudXBkYXRlQnV0dG9uTGFiZWwoJ3Jlc3RhcnQnKTtcclxuXHRcdFx0dGhpcy5yZXNldFByb2dyZXNzQmFyKCk7XHJcblx0XHR9XHJcblx0fTtcclxuXHJcblx0dXBkYXRlQnV0dG9uTGFiZWwgPSAobGFiZWw6IHN0cmluZyk6IHZvaWQgPT4ge1xyXG5cdFx0dGhpcy50aW1lckJ1dHRvbi5pbm5lclRleHQgPSBsYWJlbDtcclxuXHR9O1xyXG5cclxuXHR1cGRhdGVUaW1lID0gKHRpbWU6IG51bWJlcik6IHZvaWQgPT4ge1xyXG5cdFx0dGhpcy50aW1lclRpbWUuaW5uZXJIVE1MID0gZm9ybWF0VGltZSh0aW1lKTtcclxuXHR9O1xyXG5cclxuXHR1cGRhdGVQcm9ncmVzc0JhciA9IChjdXJyZW50OiBudW1iZXIsIGJhc2U6IG51bWJlcik6IHZvaWQgPT4ge1xyXG5cdFx0Y29uc3QgY2lyY3VtZmVyZW5jZTogbnVtYmVyID0gTnVtYmVyKGdldENvbXB1dGVkU3R5bGUodGhpcy50aW1lUHJvZ3Jlc3NCYXIpLmdldFByb3BlcnR5VmFsdWUoJy0tY2lyY3VtZmVyZW5jZScpKTtcclxuXHRcdHRoaXMudGltZVByb2dyZXNzQmFyLnN0eWxlLnNldFByb3BlcnR5KCctLXByb2dyZXNzJywgKCgxIC0gY3VycmVudCAvIGJhc2UpICogY2lyY3VtZmVyZW5jZSkudG9GaXhlZCgwKSk7XHJcblx0fTtcclxuXHJcblx0cmVzZXRQcm9ncmVzc0JhciA9ICgpOiB2b2lkID0+IHtcclxuXHRcdHRoaXMudGltZVByb2dyZXNzQmFyLnN0eWxlLnNldFByb3BlcnR5KCctLXByb2dyZXNzJywgJzAnKTtcclxuXHR9O1xyXG59XHJcblxyXG5jbGFzcyBUaW1lckNvbnRyb2xsZXIge1xyXG5cdHByaXZhdGUgdmlldzogVGltZXJWaWV3O1xyXG5cdGNvbnN0cnVjdG9yKHByaXZhdGUgdGltZXI6IFRpbWVyKSB7XHJcblx0XHR0aGlzLnZpZXcgPSBuZXcgVGltZXJWaWV3KHRoaXMudGltZXJBY3Rpb24pO1xyXG5cdFx0dGltZXIuYWRkT2JzZXJ2ZXIodGhpcy52aWV3KTtcclxuXHRcdHRoaXMudmlldy51cGRhdGUodGhpcy50aW1lcik7XHJcblx0fVxyXG5cclxuXHR0aW1lckFjdGlvbiA9ICgpOiB2b2lkID0+IHtcclxuXHRcdHN3aXRjaCAodGhpcy50aW1lci5nZXRTdGF0ZSgpKSB7XHJcblx0XHRcdGNhc2UgJ0lOSVRJQUwnOlxyXG5cdFx0XHRjYXNlICdQQVVTRUQnOlxyXG5cdFx0XHRcdHRoaXMuc3RhcnRUaW1lcigpO1xyXG5cdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHRjYXNlICdDT1VOVElORyc6XHJcblx0XHRcdFx0dGhpcy5wYXVzZVRpbWVyKCk7XHJcblx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdGNhc2UgJ0VORCc6XHJcblx0XHRcdFx0dGhpcy5yZXN0YXJ0VGltZXIoKTtcclxuXHRcdH1cclxuXHR9O1xyXG5cclxuXHRzdGFydFRpbWVyID0gKCk6IHZvaWQgPT4ge1xyXG5cdFx0dGhpcy50aW1lci5zdGFydCgpO1xyXG5cdFx0dGhpcy52aWV3LnVwZGF0ZUJ1dHRvbkxhYmVsKCdwYXVzZScpO1xyXG5cdH07XHJcblxyXG5cdHBhdXNlVGltZXIgPSAoKTogdm9pZCA9PiB7XHJcblx0XHR0aGlzLnRpbWVyLnBhdXNlKCk7XHJcblx0XHR0aGlzLnZpZXcudXBkYXRlQnV0dG9uTGFiZWwoJ3N0YXJ0Jyk7XHJcblx0fTtcclxuXHJcblx0cmVzdGFydFRpbWVyID0gKCk6IHZvaWQgPT4ge1xyXG5cdFx0dGhpcy50aW1lci5yZXN0YXJ0KCk7XHJcblx0XHR0aGlzLnZpZXcudXBkYXRlQnV0dG9uTGFiZWwoJ3N0YXJ0Jyk7XHJcblx0fTtcclxuXHJcblx0c2V0VGltZSA9ICh0aW1lOiBudW1iZXIpOiB2b2lkID0+IHtcclxuXHRcdHRoaXMudGltZXIuc2V0VGltZSh0aW1lKTtcclxuXHR9O1xyXG59XHJcblxyXG5jbGFzcyBQb21vZG9yb0FwcCB7XHJcblx0cHJpdmF0ZSB0aW1lcjogVGltZXJDb250cm9sbGVyO1xyXG5cdHByaXZhdGUgYXBwU3RhdGU6IFBvbW9kb3JvQXBwU3RhdGVzID0gJ1BPTU9ET1JPJztcclxuXHJcblx0Y29uc3RydWN0b3IoXHJcblx0XHRwcml2YXRlIHBvbW9kb3JvVGltZTogbnVtYmVyID0gREVGQVVMVF9QT01PRE9ST19USU1FLFxyXG5cdFx0cHJpdmF0ZSBzaG9ydEJyZWFrVGltZTogbnVtYmVyID0gREVGQVVMVF9TSE9SVF9CUkVBS19USU1FLFxyXG5cdFx0cHJpdmF0ZSBsb25nQnJlYWtUaW1lOiBudW1iZXIgPSBERUZBVUxUX0xPTkdfQlJFQUtfVElNRVxyXG5cdCkge1xyXG5cdFx0dGhpcy50aW1lciA9IG5ldyBUaW1lckNvbnRyb2xsZXIobmV3IFBvbW9kb3JvVGltZXIobWludXRlc1RvU2Vjb25kcyh0aGlzLnBvbW9kb3JvVGltZSkpKTtcclxuXHR9XHJcblxyXG5cdHNldFRpbWVzID0gKHBvbW9kb3JvOiBudW1iZXIsIHNob3J0QnJlYWs6IG51bWJlciwgbG9uZ0JyZWFrOiBudW1iZXIpOiB2b2lkID0+IHtcclxuXHRcdHRoaXMucG9tb2Rvcm9UaW1lID0gcG9tb2Rvcm87XHJcblx0XHR0aGlzLnNob3J0QnJlYWtUaW1lID0gc2hvcnRCcmVhaztcclxuXHRcdHRoaXMubG9uZ0JyZWFrVGltZSA9IGxvbmdCcmVhaztcclxuXHRcdHRoaXMuY2hhbmdlU3RhdGUodGhpcy5hcHBTdGF0ZSk7XHJcblx0fTtcclxuXHJcblx0Y2hhbmdlU3RhdGUgPSAoc3RhdGU6IFBvbW9kb3JvQXBwU3RhdGVzKTogdm9pZCA9PiB7XHJcblx0XHR0aGlzLmFwcFN0YXRlID0gc3RhdGU7XHJcblx0XHR0aGlzLnRpbWVyLnJlc3RhcnRUaW1lcigpO1xyXG5cdFx0dGhpcy5zZXRUaW1lckJhc2VkT25TdGF0ZSgpO1xyXG5cdH07XHJcblxyXG5cdHNldFRpbWVyQmFzZWRPblN0YXRlID0gKCk6IHZvaWQgPT4ge1xyXG5cdFx0c3dpdGNoICh0aGlzLmFwcFN0YXRlKSB7XHJcblx0XHRcdGNhc2UgJ1BPTU9ET1JPJzpcclxuXHRcdFx0XHR0aGlzLnRpbWVyLnNldFRpbWUobWludXRlc1RvU2Vjb25kcyh0aGlzLnBvbW9kb3JvVGltZSkpO1xyXG5cdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHRjYXNlICdTSE9SVF9CUkVBSyc6XHJcblx0XHRcdFx0dGhpcy50aW1lci5zZXRUaW1lKG1pbnV0ZXNUb1NlY29uZHModGhpcy5zaG9ydEJyZWFrVGltZSkpO1xyXG5cdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHRjYXNlICdMT05HX0JSRUFLJzpcclxuXHRcdFx0XHR0aGlzLnRpbWVyLnNldFRpbWUobWludXRlc1RvU2Vjb25kcyh0aGlzLmxvbmdCcmVha1RpbWUpKTtcclxuXHRcdFx0XHRicmVhaztcclxuXHRcdH1cclxuXHR9O1xyXG59XHJcblxyXG5jb25zdCBhcHBUaGVtZTogVGhlbWUgPSBuZXcgQXBwVGhlbWUoKTtcclxuY29uc3QgcG9tb2Rvcm9BcHA6IFBvbW9kb3JvQXBwID0gbmV3IFBvbW9kb3JvQXBwKCk7XHJcblxyXG4vKiBldmVudCBsaXN0ZW5lcnMgKi9cclxuc2V0dGluZ3NTdWJtaXQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZTogRXZlbnQpID0+IHtcclxuXHRlLnByZXZlbnREZWZhdWx0KCk7XHJcblxyXG5cdGNvbnN0IHBvbW9kb3JvVGltZSA9IE51bWJlcihwb21vZG9yb1RpbWVJbnB1dC52YWx1ZSk7XHJcblx0Y29uc3Qgc2hvcnRCcmVha1RpbWUgPSBOdW1iZXIoc2hvcnRCcmVha1RpbWVJbnB1dC52YWx1ZSk7XHJcblx0Y29uc3QgbG9uZ0JyZWFrVGltZSA9IE51bWJlcihsb25nQnJlYWtUaW1lSW5wdXQudmFsdWUpO1xyXG5cdGNvbnN0IGNob3NlbkZvbnQ6IEZvbnQgPSBmb250UmFkaW9CdXR0b25zLmZpbmQoYnV0dG9uID0+IGJ1dHRvbi5jaGVja2VkKS52YWx1ZSBhcyBGb250O1xyXG5cdGNvbnN0IGNob3NlbkNvbG91cjogQ29sb3VyID0gY29sb3VyUmFkaW9CdXR0b25zLmZpbmQoYnV0dG9uID0+IGJ1dHRvbi5jaGVja2VkKS52YWx1ZSBhcyBDb2xvdXI7XHJcblxyXG5cdHBvbW9kb3JvQXBwLnNldFRpbWVzKHBvbW9kb3JvVGltZSwgc2hvcnRCcmVha1RpbWUsIGxvbmdCcmVha1RpbWUpO1xyXG5cdGFwcFRoZW1lLnVwZGF0ZVRoZW1lKGNob3NlbkZvbnQsIGNob3NlbkNvbG91cik7XHJcblx0Y2xvc2VNb2RhbCgpO1xyXG59KTtcclxuXHJcbnNldHRpbmdzQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG5cdG9wZW5Nb2RhbCgpO1xyXG59KTtcclxuXHJcbmNsb3NlTW9kYWxCdXR0b24/LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG5cdGNsb3NlTW9kYWwoKTtcclxufSk7XHJcblxyXG50aW1lU3RhdGVCdXR0b25zLmZvckVhY2goYnV0dG9uID0+XHJcblx0YnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGU6IEV2ZW50KSA9PiB7XHJcblx0XHRjb25zdCBidXR0b246IEhUTUxCdXR0b25FbGVtZW50ID0gZS50YXJnZXQgYXMgSFRNTEJ1dHRvbkVsZW1lbnQ7XHJcblx0XHRjb25zdCBzdGF0ZTogUG9tb2Rvcm9BcHBTdGF0ZXMgPSBidXR0b24uZGF0YXNldC5zdGF0ZS50b1VwcGVyQ2FzZSgpIGFzIFBvbW9kb3JvQXBwU3RhdGVzO1xyXG5cdFx0YWN0aXZhdGVTdGF0ZUJ1dHRvbihidXR0b24pO1xyXG5cdFx0cG9tb2Rvcm9BcHAuY2hhbmdlU3RhdGUoc3RhdGUpO1xyXG5cdH0pXHJcbik7XHJcblxyXG4vKiBoZWxwZXIgZnVuY3Rpb25zICovXHJcbi8qIC0tLSB0aW1lciAqL1xyXG5mdW5jdGlvbiBtaW51dGVzVG9TZWNvbmRzKG1pbnV0ZXM6IG51bWJlcik6IG51bWJlciB7XHJcblx0cmV0dXJuIG1pbnV0ZXMgKiBTRUNPTkRTX0lOX01JTlVURTtcclxufVxyXG5cclxuZnVuY3Rpb24gZ2V0TWludXRlc0Zyb21TZWNvbmRzKHNlY29uZHM6IG51bWJlcik6IG51bWJlciB7XHJcblx0cmV0dXJuIE1hdGguZmxvb3Ioc2Vjb25kcyAvIFNFQ09ORFNfSU5fTUlOVVRFKTtcclxufVxyXG5cclxuZnVuY3Rpb24gZ2V0UmVtYWluaW5nU2Vjb25kcyhzZWNvbmRzOiBudW1iZXIpOiBudW1iZXIge1xyXG5cdHJldHVybiBzZWNvbmRzICUgU0VDT05EU19JTl9NSU5VVEU7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGFkZExlYWRpbmdaZXJvKHRpbWU6IG51bWJlcik6IHN0cmluZyB7XHJcblx0cmV0dXJuIHRpbWUgPCAxMCA/IGAwJHt0aW1lfWAgOiB0aW1lLnRvU3RyaW5nKCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGZvcm1hdFRpbWUoc2Vjb25kczogbnVtYmVyKTogc3RyaW5nIHtcclxuXHRjb25zdCBtaW51dGVzID0gZ2V0TWludXRlc0Zyb21TZWNvbmRzKHNlY29uZHMpO1xyXG5cdGNvbnN0IHJlbWFpbmluZ1NlY29uZHMgPSBnZXRSZW1haW5pbmdTZWNvbmRzKHNlY29uZHMpO1xyXG5cdHJldHVybiBhZGRMZWFkaW5nWmVybyhtaW51dGVzKSArICc6JyArIGFkZExlYWRpbmdaZXJvKHJlbWFpbmluZ1NlY29uZHMpO1xyXG59XHJcblxyXG4vKiAtLS0gYXBwIHRpbWUgc3RhdGUgYnV0dG9ucyBmdW5jdGlvbiAqL1xyXG5mdW5jdGlvbiBhY3RpdmF0ZVN0YXRlQnV0dG9uKGJ1dHRvbjogSFRNTEJ1dHRvbkVsZW1lbnQpIHtcclxuXHR0aW1lU3RhdGVCdXR0b25zLmZvckVhY2goYnV0dG9uID0+IGJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKSk7XHJcblx0YnV0dG9uLmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpO1xyXG59XHJcblxyXG4vKiAtLS0gbW9kYWwgKi9cclxuZnVuY3Rpb24gb3Blbk1vZGFsKCkge1xyXG5cdHNldHRpbmdzTW9kYWwuZGF0YXNldC5vcGVuID0gJ3RydWUnO1xyXG59XHJcblxyXG5mdW5jdGlvbiBjbG9zZU1vZGFsKCkge1xyXG5cdHNldHRpbmdzTW9kYWwuZGF0YXNldC5vcGVuID0gJ2ZhbHNlJztcclxufVxyXG4iXX0=
