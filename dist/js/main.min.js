"use strict";function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _defineProperties(t,e){for(var o=0;o<e.length;o++){var i=e[o];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,_toPropertyKey(i.key),i)}}function _createClass(t,e,o){return e&&_defineProperties(t.prototype,e),o&&_defineProperties(t,o),Object.defineProperty(t,"prototype",{writable:!1}),t}function _toPropertyKey(t){t=_toPrimitive(t,"string");return"symbol"===_typeof(t)?t:String(t)}function _toPrimitive(t,e){if("object"!==_typeof(t)||null===t)return t;var o=t[Symbol.toPrimitive];if(void 0===o)return("string"===e?String:Number)(t);o=o.call(t,e||"default");if("object"!==_typeof(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var settingsButton=document.querySelector("#settings-button"),settingsModal=document.querySelector("#settings-modal"),closeModalButton=document.querySelector("#close-settings-modal-button"),settingsForm=settingsModal.querySelector("#settings-form"),pomodoroTimeInput=settingsForm.querySelector("#pomodoro-time"),shortBreakTimeInput=settingsForm.querySelector("#short-break-time"),longBreakTimeInput=settingsForm.querySelector("#long-break-time"),fontRadioButtons=Array.from(settingsForm.querySelectorAll('input[type="radio"][name="font"]')),colourRadioButtons=Array.from(settingsForm.querySelectorAll('input[type="radio"][name="colour"]')),settingsSubmit=settingsForm.querySelector('button[type="submit"]'),timer=document.querySelector(".timer"),timeProgressBar=timer.querySelector("#progress-bar"),timerTime=timer.querySelector("#timer-time"),timerButton=timer.querySelector("#timer-button"),DEFAULT_FONT="sans-serif",DEFAULT_COLOUR="red",AppTheme=_createClass(function t(){var o=this;_classCallCheck(this,t),this.colour=DEFAULT_COLOUR,this.font=DEFAULT_FONT,this.updateTheme=function(t,e){o.colour=e,o.font=t,document.body.dataset.font=t,document.body.dataset.theme=e}}),appTheme=new AppTheme,minutesToSeconds=function(t){return 60*t},getMinutesFromSeconds=function(t){return Math.floor(t/60)},getRemainingSeconds=function(t){return t%60},addLeadingZero=function(t){return t<10?"0".concat(t):t.toString()},formatTime=function(t){var e=getMinutesFromSeconds(t),t=getRemainingSeconds(t);return addLeadingZero(e)+":"+addLeadingZero(t)},PomodoroTimer=_createClass(function t(){var e=this,o=0<arguments.length&&void 0!==arguments[0]?arguments[0]:0;_classCallCheck(this,t),this.time=o,this.state="INITIAL",this.start=function(){e.state="COUNTING"},this.pause=function(){e.state="PAUSED"},this.restart=function(){e.state="END"},this.getTime=function(){return e.time},this.setTime=function(t){e.time=t},this.getState=function(){return e.state},this.setState=function(t){e.state=t}}),TimerController=_createClass(function t(e){var o=this;_classCallCheck(this,t),this.timer=e,this.timerAction=function(){switch(o.timer.getState()){case"INITIAL":case"PAUSED":o.timer.start(),o.count(),timerButton.innerText="pause";break;case"COUNTING":o.timer.pause(),clearTimeout(o.countTimeout),timerButton.innerText="start"}},this.count=function(){o.setTime(o.timer.getTime()-1),o.countTimeout=setTimeout(function(){o.count()},1e3)},this.setTime=function(t){o.timer.setTime(t),timerTime.innerText=formatTime(o.timer.getTime())},timerButton.addEventListener("click",this.timerAction),timerTime.innerText=formatTime(this.timer.getTime())}),PomodoroApp=_createClass(function t(){var i=this,e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:25,o=1<arguments.length&&void 0!==arguments[1]?arguments[1]:5,n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:15;_classCallCheck(this,t),this.pomodoroTime=e,this.shortBreakTime=o,this.longBreakTime=n,this.setTimes=function(t,e,o){i.pomodoroTime=t,i.shortBreakTime=e,i.longBreakTime=o},this.timer=new TimerController(new PomodoroTimer(minutesToSeconds(this.pomodoroTime)))}),pomodoroApp=new PomodoroApp,openModal=function(){settingsModal.dataset.open="true"},closeModal=function(){settingsModal.dataset.open="false"};settingsSubmit.addEventListener("click",function(t){t.preventDefault();var t=Number(pomodoroTimeInput.value),e=Number(shortBreakTimeInput.value),o=Number(longBreakTimeInput.value),i=fontRadioButtons.find(function(t){return t.checked}).value,n=colourRadioButtons.find(function(t){return t.checked}).value;pomodoroApp.setTimes(t,e,o),appTheme.updateTheme(i,n),closeModal()}),settingsButton.addEventListener("click",function(){openModal()}),null!=closeModalButton&&closeModalButton.addEventListener("click",function(){closeModal()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
