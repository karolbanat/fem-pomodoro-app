"use strict";function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _defineProperties(t,e){for(var o=0;o<e.length;o++){var r=e[o];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,_toPropertyKey(r.key),r)}}function _createClass(t,e,o){return e&&_defineProperties(t.prototype,e),o&&_defineProperties(t,o),Object.defineProperty(t,"prototype",{writable:!1}),t}function _toPropertyKey(t){t=_toPrimitive(t,"string");return"symbol"===_typeof(t)?t:String(t)}function _toPrimitive(t,e){if("object"!==_typeof(t)||null===t)return t;var o=t[Symbol.toPrimitive];if(void 0===o)return("string"===e?String:Number)(t);o=o.call(t,e||"default");if("object"!==_typeof(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var settingsButton=document.querySelector("#settings-button"),settingsModal=document.querySelector("#settings-modal"),closeModalButton=document.querySelector("#close-settings-modal-button"),settingsForm=settingsModal.querySelector("#settings-form"),pomodoroTimeInput=settingsForm.querySelector("#pomodoro-time"),shortBreakTimeInput=settingsForm.querySelector("#short-break-time"),longBreakTimeInput=settingsForm.querySelector("#long-break-time"),fontRadioButtons=Array.from(settingsForm.querySelectorAll('input[type="radio"][name="font"]')),colourRadioButtons=Array.from(settingsForm.querySelectorAll('input[type="radio"][name="colour"]')),settingsSubmit=settingsForm.querySelector('button[type="submit"]'),timeStateButtons=Array.from(document.querySelectorAll(".state-button")),SECONDS_IN_MINUTE=60,DEFAULT_FONT="sans-serif",DEFAULT_COLOUR="red",DEFAULT_POMODORO_TIME=25,DEFAULT_SHORT_BREAK_TIME=5,DEFAULT_LONG_BREAK_TIME=15,AppTheme=_createClass(function t(){var o=this;_classCallCheck(this,t),this.colour=DEFAULT_COLOUR,this.font=DEFAULT_FONT,this.updateTheme=function(t,e){o.colour=e,o.font=t,document.body.dataset.font=t,document.body.dataset.theme=e}}),PomodoroTimer=_createClass(function t(){var e=this,o=0<arguments.length&&void 0!==arguments[0]?arguments[0]:0;_classCallCheck(this,t),this.observers=[],this.state="INITIAL",this.start=function(){e.setState("COUNTING"),e.count()},this.count=function(){0===e.countingTime?(e.setState("END"),clearTimeout(e.countTimeout)):e.countTimeout=setTimeout(function(){e.updateTime(),e.count()},1e3)},this.pause=function(){e.setState("PAUSED"),clearTimeout(e.countTimeout)},this.restart=function(){e.setState("INITIAL"),e.setTime(e.baseTime),clearTimeout(e.countTimeout)},this.getTime=function(){return e.baseTime},this.getCurrentTime=function(){return e.countingTime},this.setTime=function(t){e.baseTime=t,e.countingTime=t,e.notifyObservers()},this.updateTime=function(){e.countingTime--,e.notifyObservers()},this.getState=function(){return e.state},this.setState=function(t){e.state=t,"END"===e.state&&e.notifyObservers()},this.addObserver=function(t){e.observers.push(t)},this.notifyObservers=function(){e.observers.forEach(function(t){return t.update(e)})},this.baseTime=o,this.countingTime=o}),TimerView=_createClass(function t(e){var r=this;_classCallCheck(this,t),this.update=function(t){r.updateTime(t.getCurrentTime()),r.updateProgressBar(t.getCurrentTime(),t.getTime()),"END"===t.getState()&&(r.updateButtonLabel("restart"),r.updateTimeAnnouncement("polite"),r.resetProgressBar())},this.updateButtonLabel=function(t){r.timerButton.innerText=t},this.updateTime=function(t){r.timerTime.innerHTML=formatTime(t)},this.updateProgressBar=function(t,e){var o=Number(getComputedStyle(r.timeProgressBar).getPropertyValue("--circumference"));r.timeProgressBar.style.setProperty("--progress",((1-t/e)*o).toFixed(0))},this.updateTimeAnnouncement=function(){r.timerTime.setAttribute("aria-live",0<arguments.length&&void 0!==arguments[0]?arguments[0]:"off")},this.resetProgressBar=function(){r.timeProgressBar.style.setProperty("--progress","0")},this.timer=document.querySelector(".timer"),this.timeProgressBar=this.timer.querySelector("#progress-bar"),this.timerTime=this.timer.querySelector("#timer-time"),this.timerButton=this.timer.querySelector("#timer-button"),this.timerButton.addEventListener("click",e)}),PomodoroTimerController=_createClass(function t(e){var o=this;_classCallCheck(this,t),this.timer=e,this.timerAction=function(){switch(o.timer.getState()){case"INITIAL":case"PAUSED":o.startTimer();break;case"COUNTING":o.pauseTimer();break;case"END":o.restartTimer()}},this.startTimer=function(){o.timer.start(),o.view.updateButtonLabel("pause")},this.pauseTimer=function(){o.timer.pause(),o.view.updateButtonLabel("start")},this.restartTimer=function(){o.timer.restart(),o.view.updateButtonLabel("start"),o.view.updateTimeAnnouncement()},this.setTime=function(t){o.timer.setTime(t)},this.view=new TimerView(this.timerAction),e.addObserver(this.view),this.view.update(this.timer)}),PomodoroApp=_createClass(function t(){var r=this,e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:DEFAULT_POMODORO_TIME,o=1<arguments.length&&void 0!==arguments[1]?arguments[1]:DEFAULT_SHORT_BREAK_TIME,i=2<arguments.length&&void 0!==arguments[2]?arguments[2]:DEFAULT_LONG_BREAK_TIME;_classCallCheck(this,t),this.pomodoroTime=e,this.shortBreakTime=o,this.longBreakTime=i,this.appState="POMODORO",this.setTimes=function(t,e,o){r.pomodoroTime=t,r.shortBreakTime=e,r.longBreakTime=o,r.changeState(r.appState)},this.changeState=function(t){r.appState=t,r.timerController.restartTimer(),r.setTimerBasedOnState()},this.setTimerBasedOnState=function(){switch(r.appState){case"POMODORO":r.timerController.setTime(minutesToSeconds(r.pomodoroTime));break;case"SHORT_BREAK":r.timerController.setTime(minutesToSeconds(r.shortBreakTime));break;case"LONG_BREAK":r.timerController.setTime(minutesToSeconds(r.longBreakTime))}},this.timerController=new PomodoroTimerController(new PomodoroTimer(minutesToSeconds(this.pomodoroTime)))}),appTheme=new AppTheme,pomodoroApp=new PomodoroApp;function minutesToSeconds(t){return t*SECONDS_IN_MINUTE}function getMinutesFromSeconds(t){return Math.floor(t/SECONDS_IN_MINUTE)}function getRemainingSeconds(t){return t%SECONDS_IN_MINUTE}function addLeadingZero(t){return t<10?"0".concat(t):t.toString()}function formatTime(t){var e=getMinutesFromSeconds(t),t=getRemainingSeconds(t);return addLeadingZero(e)+":"+addLeadingZero(t)}function activateStateButton(t){timeStateButtons.forEach(function(t){return t.classList.remove("active")}),t.classList.add("active")}function openModal(){settingsModal.dataset.open="true"}function closeModal(){settingsModal.dataset.open="false"}settingsSubmit.addEventListener("click",function(t){t.preventDefault();var t=Number(pomodoroTimeInput.value),e=Number(shortBreakTimeInput.value),o=Number(longBreakTimeInput.value),r=fontRadioButtons.find(function(t){return t.checked}).value,i=colourRadioButtons.find(function(t){return t.checked}).value;pomodoroApp.setTimes(t,e,o),appTheme.updateTheme(r,i),closeModal()}),settingsButton.addEventListener("click",function(){openModal()}),null!=closeModalButton&&closeModalButton.addEventListener("click",function(){closeModal()}),timeStateButtons.forEach(function(t){return t.addEventListener("click",function(t){var t=t.target,e=t.dataset.state.toUpperCase();activateStateButton(t),pomodoroApp.changeState(e)})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4udHMiXSwibmFtZXMiOlsic2V0dGluZ3NCdXR0b24iLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJzZXR0aW5nc01vZGFsIiwiY2xvc2VNb2RhbEJ1dHRvbiIsInNldHRpbmdzRm9ybSIsInBvbW9kb3JvVGltZUlucHV0Iiwic2hvcnRCcmVha1RpbWVJbnB1dCIsImxvbmdCcmVha1RpbWVJbnB1dCIsImZvbnRSYWRpb0J1dHRvbnMiLCJBcnJheSIsImZyb20iLCJxdWVyeVNlbGVjdG9yQWxsIiwiY29sb3VyUmFkaW9CdXR0b25zIiwic2V0dGluZ3NTdWJtaXQiLCJ0aW1lU3RhdGVCdXR0b25zIiwiU0VDT05EU19JTl9NSU5VVEUiLCJERUZBVUxUX0ZPTlQiLCJERUZBVUxUX0NPTE9VUiIsIkRFRkFVTFRfUE9NT0RPUk9fVElNRSIsIkRFRkFVTFRfU0hPUlRfQlJFQUtfVElNRSIsIkRFRkFVTFRfTE9OR19CUkVBS19USU1FIiwiQXBwVGhlbWUiLCJfY3JlYXRlQ2xhc3MiLCJfdGhpcyIsInRoaXMiLCJfY2xhc3NDYWxsQ2hlY2siLCJjb2xvdXIiLCJmb250IiwidXBkYXRlVGhlbWUiLCJib2R5IiwiZGF0YXNldCIsInRoZW1lIiwiUG9tb2Rvcm9UaW1lciIsIl90aGlzMiIsInRpbWUiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJ1bmRlZmluZWQiLCJvYnNlcnZlcnMiLCJzdGF0ZSIsInN0YXJ0Iiwic2V0U3RhdGUiLCJjb3VudCIsImNvdW50aW5nVGltZSIsImNsZWFyVGltZW91dCIsImNvdW50VGltZW91dCIsInNldFRpbWVvdXQiLCJ1cGRhdGVUaW1lIiwicGF1c2UiLCJyZXN0YXJ0Iiwic2V0VGltZSIsImJhc2VUaW1lIiwiZ2V0VGltZSIsImdldEN1cnJlbnRUaW1lIiwibm90aWZ5T2JzZXJ2ZXJzIiwiZ2V0U3RhdGUiLCJhZGRPYnNlcnZlciIsIm9ic2VydmVyIiwicHVzaCIsImZvckVhY2giLCJ1cGRhdGUiLCJUaW1lclZpZXciLCJidXR0b25PbkNsaWNrIiwiX3RoaXMzIiwib2JzZXJ2YWJsZSIsIm9icyIsInVwZGF0ZVByb2dyZXNzQmFyIiwidXBkYXRlQnV0dG9uTGFiZWwiLCJ1cGRhdGVUaW1lQW5ub3VuY2VtZW50IiwicmVzZXRQcm9ncmVzc0JhciIsImxhYmVsIiwidGltZXJCdXR0b24iLCJpbm5lclRleHQiLCJ0aW1lclRpbWUiLCJpbm5lckhUTUwiLCJmb3JtYXRUaW1lIiwiY3VycmVudCIsImJhc2UiLCJjaXJjdW1mZXJlbmNlIiwiTnVtYmVyIiwiZ2V0Q29tcHV0ZWRTdHlsZSIsInRpbWVQcm9ncmVzc0JhciIsImdldFByb3BlcnR5VmFsdWUiLCJzdHlsZSIsInNldFByb3BlcnR5IiwidG9GaXhlZCIsInNldEF0dHJpYnV0ZSIsInRpbWVyIiwiYWRkRXZlbnRMaXN0ZW5lciIsIlBvbW9kb3JvVGltZXJDb250cm9sbGVyIiwiX3RoaXM0IiwidGltZXJBY3Rpb24iLCJzdGFydFRpbWVyIiwicGF1c2VUaW1lciIsInJlc3RhcnRUaW1lciIsInZpZXciLCJQb21vZG9yb0FwcCIsIl90aGlzNSIsInBvbW9kb3JvVGltZSIsInNob3J0QnJlYWtUaW1lIiwibG9uZ0JyZWFrVGltZSIsImFwcFN0YXRlIiwic2V0VGltZXMiLCJwb21vZG9ybyIsInNob3J0QnJlYWsiLCJsb25nQnJlYWsiLCJjaGFuZ2VTdGF0ZSIsInRpbWVyQ29udHJvbGxlciIsInNldFRpbWVyQmFzZWRPblN0YXRlIiwibWludXRlc1RvU2Vjb25kcyIsImFwcFRoZW1lIiwicG9tb2Rvcm9BcHAiLCJtaW51dGVzIiwiZ2V0TWludXRlc0Zyb21TZWNvbmRzIiwic2Vjb25kcyIsIk1hdGgiLCJmbG9vciIsImdldFJlbWFpbmluZ1NlY29uZHMiLCJhZGRMZWFkaW5nWmVybyIsImNvbmNhdCIsInRvU3RyaW5nIiwicmVtYWluaW5nU2Vjb25kcyIsImFjdGl2YXRlU3RhdGVCdXR0b24iLCJidXR0b24iLCJjbGFzc0xpc3QiLCJyZW1vdmUiLCJhZGQiLCJvcGVuTW9kYWwiLCJvcGVuIiwiY2xvc2VNb2RhbCIsImUiLCJwcmV2ZW50RGVmYXVsdCIsInZhbHVlIiwiY2hvc2VuRm9udCIsImZpbmQiLCJjaGVja2VkIiwiY2hvc2VuQ29sb3VyIiwidGFyZ2V0IiwidG9VcHBlckNhc2UiXSwibWFwcGluZ3MiOiIyakNBQ0EsSUFBTUEsZUFBb0NDLFNBQVNDLGNBQWMsa0JBQWtCLEVBQzdFQyxjQUE2QkYsU0FBU0MsY0FBYyxpQkFBaUIsRUFDckVFLGlCQUFzQ0gsU0FBU0MsY0FBYyw4QkFBOEIsRUFHM0ZHLGFBQWdDRixjQUFjRCxjQUFjLGdCQUFnQixFQUM1RUksa0JBQXNDRCxhQUFhSCxjQUFjLGdCQUFnQixFQUNqRkssb0JBQXdDRixhQUFhSCxjQUFjLG1CQUFtQixFQUN0Rk0sbUJBQXVDSCxhQUFhSCxjQUFjLGtCQUFrQixFQUNwRk8saUJBQTRDQyxNQUFNQyxLQUN2RE4sYUFBYU8saUJBQWlCLGtDQUFrQyxDQUFDLEVBRTVEQyxtQkFBOENILE1BQU1DLEtBQ3pETixhQUFhTyxpQkFBaUIsb0NBQW9DLENBQUMsRUFFOURFLGVBQW9DVCxhQUFhSCxjQUFjLHVCQUF1QixFQUd0RmEsaUJBQTZDTCxNQUFNQyxLQUFLVixTQUFTVyxpQkFBaUIsZUFBZSxDQUFDLEVBSWxHSSxrQkFBNEIsR0FFNUJDLGFBQXFCLGFBQ3JCQyxlQUF5QixNQUV6QkMsc0JBQWdDLEdBQ2hDQyx5QkFBbUMsRUFDbkNDLHdCQUFrQyxHQTRDbENDLFNBQVFDLGFBQWQsU0FBQUQsSUFBQSxJQUFBRSxFQUFBQyxLQUFBQyxnQkFBQUQsS0FBQUgsQ0FBQSxFQUNDRyxLQUFBRSxPQUFpQlQsZUFDakJPLEtBQUFHLEtBQWFYLGFBRWJRLEtBQUFJLFlBQWMsU0FBQ0QsRUFBWUQsR0FDMUJILEVBQUtHLE9BQVNBLEVBQ2RILEVBQUtJLEtBQU9BLEVBQ1ozQixTQUFTNkIsS0FBS0MsUUFBUUgsS0FBT0EsRUFDN0IzQixTQUFTNkIsS0FBS0MsUUFBUUMsTUFBUUwsQ0FDL0IsQ0FDRCxDQUFDLEVBRUtNLGNBQWFWLGFBUWxC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QUFNakMsRUFBZW5CLE9BQU8xRSxrQkFBa0IrSCxLQUFLLEVBQzdDakMsRUFBaUJwQixPQUFPekUsb0JBQW9COEgsS0FBSyxFQUNqRGhDLEVBQWdCckIsT0FBT3hFLG1CQUFtQjZILEtBQUssRUFDL0NDLEVBQW1CN0gsaUJBQWlCOEgsS0FBSyxTQUFBWCxHQUFNLE9BQUlBLEVBQU9ZLE9BQU8sQ0FBQSxFQUFFSCxNQUNuRUksRUFBdUI1SCxtQkFBbUIwSCxLQUFLLFNBQUFYLEdBQU0sT0FBSUEsRUFBT1ksT0FBTyxDQUFBLEVBQUVILE1BRS9FckIsWUFBWVQsU0FBU0osRUFBY0MsRUFBZ0JDLENBQWEsRUFDaEVVLFNBQVNsRixZQUFZeUcsRUFBWUcsQ0FBWSxFQUM3Q1AsV0FBVSxDQUNYLENBQUMsRUFFRGxJLGVBQWV5RixpQkFBaUIsUUFBUyxXQUN4Q3VDLFVBQVMsQ0FDVixDQUFDLEVBRUQ1SCxNQUFBQSxrQkFBQUEsaUJBQWtCcUYsaUJBQWlCLFFBQVMsV0FDM0N5QyxXQUFVLENBQ1gsQ0FBQyxFQUVEbkgsaUJBQWlCNkMsUUFBUSxTQUFBZ0UsR0FBTSxPQUM5QkEsRUFBT25DLGlCQUFpQixRQUFTLFNBQUMwQyxHQUNqQyxJQUFNUCxFQUE0Qk8sRUFBRU8sT0FDOUJsRyxFQUEyQm9GLEVBQU83RixRQUFRUyxNQUFNbUcsWUFBVyxFQUNqRWhCLG9CQUFvQkMsQ0FBTSxFQUMxQlosWUFBWUwsWUFBWW5FLENBQUssQ0FDOUIsQ0FBQyxDQUFDLENBQUEiLCJmaWxlIjoibWFpbi5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBtb2RhbCBhbmQgbW9kYWwgcmVhbHRlZCBlbGVtZW50cyAqL1xyXG5jb25zdCBzZXR0aW5nc0J1dHRvbjogSFRNTEJ1dHRvbkVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjc2V0dGluZ3MtYnV0dG9uJyk7XHJcbmNvbnN0IHNldHRpbmdzTW9kYWw6IEhUTUxFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3NldHRpbmdzLW1vZGFsJyk7XHJcbmNvbnN0IGNsb3NlTW9kYWxCdXR0b246IEhUTUxCdXR0b25FbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2Nsb3NlLXNldHRpbmdzLW1vZGFsLWJ1dHRvbicpO1xyXG5cclxuLyogc2V0dGluZ3MgZm9ybSBlbGVtZW50cyAqL1xyXG5jb25zdCBzZXR0aW5nc0Zvcm06IEhUTUxGb3JtRWxlbWVudCA9IHNldHRpbmdzTW9kYWwucXVlcnlTZWxlY3RvcignI3NldHRpbmdzLWZvcm0nKTtcclxuY29uc3QgcG9tb2Rvcm9UaW1lSW5wdXQ6IEhUTUxJbnB1dEVsZW1lbnQgPSBzZXR0aW5nc0Zvcm0ucXVlcnlTZWxlY3RvcignI3BvbW9kb3JvLXRpbWUnKTtcclxuY29uc3Qgc2hvcnRCcmVha1RpbWVJbnB1dDogSFRNTElucHV0RWxlbWVudCA9IHNldHRpbmdzRm9ybS5xdWVyeVNlbGVjdG9yKCcjc2hvcnQtYnJlYWstdGltZScpO1xyXG5jb25zdCBsb25nQnJlYWtUaW1lSW5wdXQ6IEhUTUxJbnB1dEVsZW1lbnQgPSBzZXR0aW5nc0Zvcm0ucXVlcnlTZWxlY3RvcignI2xvbmctYnJlYWstdGltZScpO1xyXG5jb25zdCBmb250UmFkaW9CdXR0b25zOiBBcnJheTxIVE1MSW5wdXRFbGVtZW50PiA9IEFycmF5LmZyb20oXHJcblx0c2V0dGluZ3NGb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoJ2lucHV0W3R5cGU9XCJyYWRpb1wiXVtuYW1lPVwiZm9udFwiXScpXHJcbik7XHJcbmNvbnN0IGNvbG91clJhZGlvQnV0dG9uczogQXJyYXk8SFRNTElucHV0RWxlbWVudD4gPSBBcnJheS5mcm9tKFxyXG5cdHNldHRpbmdzRm9ybS5xdWVyeVNlbGVjdG9yQWxsKCdpbnB1dFt0eXBlPVwicmFkaW9cIl1bbmFtZT1cImNvbG91clwiXScpXHJcbik7XHJcbmNvbnN0IHNldHRpbmdzU3VibWl0OiBIVE1MQnV0dG9uRWxlbWVudCA9IHNldHRpbmdzRm9ybS5xdWVyeVNlbGVjdG9yKCdidXR0b25bdHlwZT1cInN1Ym1pdFwiXScpO1xyXG5cclxuLyogdGltZSBzdGF0ZSBidXR0b25zICovXHJcbmNvbnN0IHRpbWVTdGF0ZUJ1dHRvbnM6IEFycmF5PEhUTUxCdXR0b25FbGVtZW50PiA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnN0YXRlLWJ1dHRvbicpKTtcclxuXHJcbi8qIGNvbnN0YW50cyAqL1xyXG4vKiAtLS0gZ2VuZXJhbCAqL1xyXG5jb25zdCBTRUNPTkRTX0lOX01JTlVURTogbnVtYmVyID0gNjA7XHJcbi8qIC0tLSB0aGVtZSAqL1xyXG5jb25zdCBERUZBVUxUX0ZPTlQ6IEZvbnQgPSAnc2Fucy1zZXJpZic7XHJcbmNvbnN0IERFRkFVTFRfQ09MT1VSOiBDb2xvdXIgPSAncmVkJztcclxuLyogLS0tIHRpbWVzICovXHJcbmNvbnN0IERFRkFVTFRfUE9NT0RPUk9fVElNRTogbnVtYmVyID0gMjU7XHJcbmNvbnN0IERFRkFVTFRfU0hPUlRfQlJFQUtfVElNRTogbnVtYmVyID0gNTtcclxuY29uc3QgREVGQVVMVF9MT05HX0JSRUFLX1RJTUU6IG51bWJlciA9IDE1O1xyXG5cclxuLyogdHlwZXMgKi9cclxudHlwZSBDb2xvdXIgPSAncmVkJyB8ICdjeWFuJyB8ICd2aW9sZXQnO1xyXG50eXBlIEZvbnQgPSAnc2VyaWYnIHwgJ3NhbnMtc2VyaWYnIHwgJ21vbm9zcGFjZSc7XHJcbnR5cGUgVGltZXJTdGF0ZSA9ICdJTklUSUFMJyB8ICdDT1VOVElORycgfCAnUEFVU0VEJyB8ICdFTkQnO1xyXG50eXBlIFBvbW9kb3JvQXBwU3RhdGVzID0gJ1BPTU9ET1JPJyB8ICdTSE9SVF9CUkVBSycgfCAnTE9OR19CUkVBSyc7XHJcblxyXG4vKiBpbnRlcmZhY2VzICovXHJcbmludGVyZmFjZSBPYnNlcnZhYmxlIHtcclxuXHRhZGRPYnNlcnZlcjogKG9ic2VydmVyOiBPYnNlcnZlcikgPT4gdm9pZDtcclxuXHRub3RpZnlPYnNlcnZlcnM6ICgpID0+IHZvaWQ7XHJcbn1cclxuXHJcbmludGVyZmFjZSBPYnNlcnZlciB7XHJcblx0dXBkYXRlOiAob2JzZXJ2YWJsZTogT2JzZXJ2YWJsZSkgPT4gdm9pZDtcclxufVxyXG5cclxuaW50ZXJmYWNlIFRoZW1lIHtcclxuXHRjb2xvdXI6IENvbG91cjtcclxuXHRmb250OiBGb250O1xyXG5cdHVwZGF0ZVRoZW1lOiAoZm9udDogRm9udCwgY29sb3VyOiBDb2xvdXIpID0+IHZvaWQ7XHJcbn1cclxuXHJcbmludGVyZmFjZSBUaW1lciBleHRlbmRzIE9ic2VydmFibGUge1xyXG5cdHN0YXRlOiBUaW1lclN0YXRlO1xyXG5cdHN0YXJ0OiAoKSA9PiB2b2lkO1xyXG5cdHBhdXNlOiAoKSA9PiB2b2lkO1xyXG5cdHJlc3RhcnQ6ICgpID0+IHZvaWQ7XHJcblx0c2V0VGltZTogKHRpbWU6IG51bWJlcikgPT4gdm9pZDtcclxuXHRnZXRUaW1lOiAoKSA9PiBudW1iZXI7XHJcblx0Z2V0Q3VycmVudFRpbWU6ICgpID0+IG51bWJlcjtcclxuXHRnZXRTdGF0ZTogKCkgPT4gVGltZXJTdGF0ZTtcclxuXHRzZXRTdGF0ZTogKHN0YXRlOiBUaW1lclN0YXRlKSA9PiB2b2lkO1xyXG59XHJcblxyXG5pbnRlcmZhY2UgVGltZXJDb250cm9sbGVyIHtcclxuXHRzdGFydFRpbWVyOiAoKSA9PiB2b2lkO1xyXG5cdHBhdXNlVGltZXI6ICgpID0+IHZvaWQ7XHJcblx0cmVzdGFydFRpbWVyOiAoKSA9PiB2b2lkO1xyXG5cdHNldFRpbWU6ICh0aW1lOiBudW1iZXIpID0+IHZvaWQ7XHJcbn1cclxuXHJcbi8qIGNsYXNzZXMgKi9cclxuY2xhc3MgQXBwVGhlbWUgaW1wbGVtZW50cyBUaGVtZSB7XHJcblx0Y29sb3VyOiBDb2xvdXIgPSBERUZBVUxUX0NPTE9VUjtcclxuXHRmb250OiBGb250ID0gREVGQVVMVF9GT05UO1xyXG5cclxuXHR1cGRhdGVUaGVtZSA9IChmb250OiBGb250LCBjb2xvdXI6IENvbG91cik6IHZvaWQgPT4ge1xyXG5cdFx0dGhpcy5jb2xvdXIgPSBjb2xvdXI7XHJcblx0XHR0aGlzLmZvbnQgPSBmb250O1xyXG5cdFx0ZG9jdW1lbnQuYm9keS5kYXRhc2V0LmZvbnQgPSBmb250O1xyXG5cdFx0ZG9jdW1lbnQuYm9keS5kYXRhc2V0LnRoZW1lID0gY29sb3VyO1xyXG5cdH07XHJcbn1cclxuXHJcbmNsYXNzIFBvbW9kb3JvVGltZXIgaW1wbGVtZW50cyBUaW1lciB7XHJcblx0b2JzZXJ2ZXJzOiBPYnNlcnZlcltdID0gW107XHJcblx0Y291bnRUaW1lb3V0OiBOb2RlSlMuVGltZW91dDtcclxuXHRzdGF0ZTogVGltZXJTdGF0ZSA9ICdJTklUSUFMJztcclxuXHJcblx0cHJpdmF0ZSBjb3VudGluZ1RpbWU6IG51bWJlcjtcclxuXHRwcml2YXRlIGJhc2VUaW1lOiBudW1iZXI7XHJcblxyXG5cdGNvbnN0cnVjdG9yKHRpbWU6IG51bWJlciA9IDApIHtcclxuXHRcdHRoaXMuYmFzZVRpbWUgPSB0aW1lO1xyXG5cdFx0dGhpcy5jb3VudGluZ1RpbWUgPSB0aW1lO1xyXG5cdH1cclxuXHJcblx0c3RhcnQgPSAoKTogdm9pZCA9PiB7XHJcblx0XHR0aGlzLnNldFN0YXRlKCdDT1VOVElORycpO1xyXG5cdFx0dGhpcy5jb3VudCgpO1xyXG5cdH07XHJcblxyXG5cdGNvdW50ID0gKCk6IHZvaWQgPT4ge1xyXG5cdFx0aWYgKHRoaXMuY291bnRpbmdUaW1lID09PSAwKSB7XHJcblx0XHRcdHRoaXMuc2V0U3RhdGUoJ0VORCcpO1xyXG5cdFx0XHRjbGVhclRpbWVvdXQodGhpcy5jb3VudFRpbWVvdXQpO1xyXG5cdFx0XHRyZXR1cm47XHJcblx0XHR9XHJcblxyXG5cdFx0dGhpcy5jb3VudFRpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IHtcclxuXHRcdFx0dGhpcy51cGRhdGVUaW1lKCk7XHJcblx0XHRcdHRoaXMuY291bnQoKTtcclxuXHRcdH0sIDEwMDApO1xyXG5cdH07XHJcblxyXG5cdHBhdXNlID0gKCk6IHZvaWQgPT4ge1xyXG5cdFx0dGhpcy5zZXRTdGF0ZSgnUEFVU0VEJyk7XHJcblx0XHRjbGVhclRpbWVvdXQodGhpcy5jb3VudFRpbWVvdXQpO1xyXG5cdH07XHJcblxyXG5cdHJlc3RhcnQgPSAoKTogdm9pZCA9PiB7XHJcblx0XHR0aGlzLnNldFN0YXRlKCdJTklUSUFMJyk7XHJcblx0XHR0aGlzLnNldFRpbWUodGhpcy5iYXNlVGltZSk7XHJcblx0XHRjbGVhclRpbWVvdXQodGhpcy5jb3VudFRpbWVvdXQpO1xyXG5cdH07XHJcblxyXG5cdGdldFRpbWUgPSAoKTogbnVtYmVyID0+IHRoaXMuYmFzZVRpbWU7XHJcblxyXG5cdGdldEN1cnJlbnRUaW1lID0gKCk6IG51bWJlciA9PiB0aGlzLmNvdW50aW5nVGltZTtcclxuXHJcblx0c2V0VGltZSA9ICh0aW1lOiBudW1iZXIpOiB2b2lkID0+IHtcclxuXHRcdHRoaXMuYmFzZVRpbWUgPSB0aW1lO1xyXG5cdFx0dGhpcy5jb3VudGluZ1RpbWUgPSB0aW1lO1xyXG5cdFx0dGhpcy5ub3RpZnlPYnNlcnZlcnMoKTtcclxuXHR9O1xyXG5cclxuXHR1cGRhdGVUaW1lID0gKCk6IHZvaWQgPT4ge1xyXG5cdFx0dGhpcy5jb3VudGluZ1RpbWUtLTtcclxuXHRcdHRoaXMubm90aWZ5T2JzZXJ2ZXJzKCk7XHJcblx0fTtcclxuXHJcblx0Z2V0U3RhdGUgPSAoKTogVGltZXJTdGF0ZSA9PiB0aGlzLnN0YXRlO1xyXG5cclxuXHRzZXRTdGF0ZSA9IChzdGF0ZTogVGltZXJTdGF0ZSk6IHZvaWQgPT4ge1xyXG5cdFx0dGhpcy5zdGF0ZSA9IHN0YXRlO1xyXG5cclxuXHRcdGlmICh0aGlzLnN0YXRlID09PSAnRU5EJykgdGhpcy5ub3RpZnlPYnNlcnZlcnMoKTtcclxuXHR9O1xyXG5cclxuXHQvKiBvYnNlcnZlciBpbXBsZW1lbnRhdGlvbiAqL1xyXG5cdGFkZE9ic2VydmVyID0gKG9ic2VydmVyOiBPYnNlcnZlcik6IHZvaWQgPT4ge1xyXG5cdFx0dGhpcy5vYnNlcnZlcnMucHVzaChvYnNlcnZlcik7XHJcblx0fTtcclxuXHJcblx0bm90aWZ5T2JzZXJ2ZXJzID0gKCk6IHZvaWQgPT4ge1xyXG5cdFx0dGhpcy5vYnNlcnZlcnMuZm9yRWFjaChvYnNlcnZlciA9PiBvYnNlcnZlci51cGRhdGUodGhpcykpO1xyXG5cdH07XHJcbn1cclxuXHJcbmNsYXNzIFRpbWVyVmlldyBpbXBsZW1lbnRzIE9ic2VydmVyIHtcclxuXHRwcml2YXRlIHRpbWVyOiBIVE1MRWxlbWVudDtcclxuXHRwcml2YXRlIHRpbWVQcm9ncmVzc0JhcjogSFRNTEVsZW1lbnQ7XHJcblx0cHJpdmF0ZSB0aW1lclRpbWU6IEhUTUxFbGVtZW50O1xyXG5cdHByaXZhdGUgdGltZXJCdXR0b246IEhUTUxCdXR0b25FbGVtZW50O1xyXG5cclxuXHRjb25zdHJ1Y3RvcihidXR0b25PbkNsaWNrOiAoZTogRXZlbnQpID0+IHZvaWQpIHtcclxuXHRcdHRoaXMudGltZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudGltZXInKTtcclxuXHRcdHRoaXMudGltZVByb2dyZXNzQmFyID0gdGhpcy50aW1lci5xdWVyeVNlbGVjdG9yKCcjcHJvZ3Jlc3MtYmFyJyk7XHJcblx0XHR0aGlzLnRpbWVyVGltZSA9IHRoaXMudGltZXIucXVlcnlTZWxlY3RvcignI3RpbWVyLXRpbWUnKTtcclxuXHRcdHRoaXMudGltZXJCdXR0b24gPSB0aGlzLnRpbWVyLnF1ZXJ5U2VsZWN0b3IoJyN0aW1lci1idXR0b24nKTtcclxuXHRcdHRoaXMudGltZXJCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBidXR0b25PbkNsaWNrKTtcclxuXHR9XHJcblxyXG5cdHVwZGF0ZSA9IChvYnNlcnZhYmxlOiBPYnNlcnZhYmxlKTogdm9pZCA9PiB7XHJcblx0XHRjb25zdCBvYnM6IFRpbWVyID0gb2JzZXJ2YWJsZSBhcyBUaW1lcjtcclxuXHRcdHRoaXMudXBkYXRlVGltZShvYnMuZ2V0Q3VycmVudFRpbWUoKSk7XHJcblx0XHR0aGlzLnVwZGF0ZVByb2dyZXNzQmFyKG9icy5nZXRDdXJyZW50VGltZSgpLCBvYnMuZ2V0VGltZSgpKTtcclxuXHJcblx0XHRpZiAob2JzLmdldFN0YXRlKCkgPT09ICdFTkQnKSB7XHJcblx0XHRcdHRoaXMudXBkYXRlQnV0dG9uTGFiZWwoJ3Jlc3RhcnQnKTtcclxuXHRcdFx0dGhpcy51cGRhdGVUaW1lQW5ub3VuY2VtZW50KCdwb2xpdGUnKTtcclxuXHRcdFx0dGhpcy5yZXNldFByb2dyZXNzQmFyKCk7XHJcblx0XHR9XHJcblx0fTtcclxuXHJcblx0dXBkYXRlQnV0dG9uTGFiZWwgPSAobGFiZWw6IHN0cmluZyk6IHZvaWQgPT4ge1xyXG5cdFx0dGhpcy50aW1lckJ1dHRvbi5pbm5lclRleHQgPSBsYWJlbDtcclxuXHR9O1xyXG5cclxuXHR1cGRhdGVUaW1lID0gKHRpbWU6IG51bWJlcik6IHZvaWQgPT4ge1xyXG5cdFx0dGhpcy50aW1lclRpbWUuaW5uZXJIVE1MID0gZm9ybWF0VGltZSh0aW1lKTtcclxuXHR9O1xyXG5cclxuXHR1cGRhdGVQcm9ncmVzc0JhciA9IChjdXJyZW50OiBudW1iZXIsIGJhc2U6IG51bWJlcik6IHZvaWQgPT4ge1xyXG5cdFx0Y29uc3QgY2lyY3VtZmVyZW5jZTogbnVtYmVyID0gTnVtYmVyKGdldENvbXB1dGVkU3R5bGUodGhpcy50aW1lUHJvZ3Jlc3NCYXIpLmdldFByb3BlcnR5VmFsdWUoJy0tY2lyY3VtZmVyZW5jZScpKTtcclxuXHRcdHRoaXMudGltZVByb2dyZXNzQmFyLnN0eWxlLnNldFByb3BlcnR5KCctLXByb2dyZXNzJywgKCgxIC0gY3VycmVudCAvIGJhc2UpICogY2lyY3VtZmVyZW5jZSkudG9GaXhlZCgwKSk7XHJcblx0fTtcclxuXHJcblx0dXBkYXRlVGltZUFubm91bmNlbWVudCA9ICh2YWx1ZTogc3RyaW5nID0gJ29mZicpOiB2b2lkID0+IHtcclxuXHRcdHRoaXMudGltZXJUaW1lLnNldEF0dHJpYnV0ZSgnYXJpYS1saXZlJywgdmFsdWUpO1xyXG5cdH07XHJcblxyXG5cdHJlc2V0UHJvZ3Jlc3NCYXIgPSAoKTogdm9pZCA9PiB7XHJcblx0XHR0aGlzLnRpbWVQcm9ncmVzc0Jhci5zdHlsZS5zZXRQcm9wZXJ0eSgnLS1wcm9ncmVzcycsICcwJyk7XHJcblx0fTtcclxufVxyXG5cclxuY2xhc3MgUG9tb2Rvcm9UaW1lckNvbnRyb2xsZXIgaW1wbGVtZW50cyBUaW1lckNvbnRyb2xsZXIge1xyXG5cdHByaXZhdGUgdmlldzogVGltZXJWaWV3O1xyXG5cdGNvbnN0cnVjdG9yKHByaXZhdGUgdGltZXI6IFRpbWVyKSB7XHJcblx0XHR0aGlzLnZpZXcgPSBuZXcgVGltZXJWaWV3KHRoaXMudGltZXJBY3Rpb24pO1xyXG5cdFx0dGltZXIuYWRkT2JzZXJ2ZXIodGhpcy52aWV3KTtcclxuXHRcdHRoaXMudmlldy51cGRhdGUodGhpcy50aW1lcik7XHJcblx0fVxyXG5cclxuXHR0aW1lckFjdGlvbiA9ICgpOiB2b2lkID0+IHtcclxuXHRcdHN3aXRjaCAodGhpcy50aW1lci5nZXRTdGF0ZSgpKSB7XHJcblx0XHRcdGNhc2UgJ0lOSVRJQUwnOlxyXG5cdFx0XHRjYXNlICdQQVVTRUQnOlxyXG5cdFx0XHRcdHRoaXMuc3RhcnRUaW1lcigpO1xyXG5cdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHRjYXNlICdDT1VOVElORyc6XHJcblx0XHRcdFx0dGhpcy5wYXVzZVRpbWVyKCk7XHJcblx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdGNhc2UgJ0VORCc6XHJcblx0XHRcdFx0dGhpcy5yZXN0YXJ0VGltZXIoKTtcclxuXHRcdH1cclxuXHR9O1xyXG5cclxuXHRzdGFydFRpbWVyID0gKCk6IHZvaWQgPT4ge1xyXG5cdFx0dGhpcy50aW1lci5zdGFydCgpO1xyXG5cdFx0dGhpcy52aWV3LnVwZGF0ZUJ1dHRvbkxhYmVsKCdwYXVzZScpO1xyXG5cdH07XHJcblxyXG5cdHBhdXNlVGltZXIgPSAoKTogdm9pZCA9PiB7XHJcblx0XHR0aGlzLnRpbWVyLnBhdXNlKCk7XHJcblx0XHR0aGlzLnZpZXcudXBkYXRlQnV0dG9uTGFiZWwoJ3N0YXJ0Jyk7XHJcblx0fTtcclxuXHJcblx0cmVzdGFydFRpbWVyID0gKCk6IHZvaWQgPT4ge1xyXG5cdFx0dGhpcy50aW1lci5yZXN0YXJ0KCk7XHJcblx0XHR0aGlzLnZpZXcudXBkYXRlQnV0dG9uTGFiZWwoJ3N0YXJ0Jyk7XHJcblx0XHR0aGlzLnZpZXcudXBkYXRlVGltZUFubm91bmNlbWVudCgpO1xyXG5cdH07XHJcblxyXG5cdHNldFRpbWUgPSAodGltZTogbnVtYmVyKTogdm9pZCA9PiB7XHJcblx0XHR0aGlzLnRpbWVyLnNldFRpbWUodGltZSk7XHJcblx0fTtcclxufVxyXG5cclxuY2xhc3MgUG9tb2Rvcm9BcHAge1xyXG5cdHByaXZhdGUgdGltZXJDb250cm9sbGVyOiBUaW1lckNvbnRyb2xsZXI7XHJcblx0cHJpdmF0ZSBhcHBTdGF0ZTogUG9tb2Rvcm9BcHBTdGF0ZXMgPSAnUE9NT0RPUk8nO1xyXG5cclxuXHRjb25zdHJ1Y3RvcihcclxuXHRcdHByaXZhdGUgcG9tb2Rvcm9UaW1lOiBudW1iZXIgPSBERUZBVUxUX1BPTU9ET1JPX1RJTUUsXHJcblx0XHRwcml2YXRlIHNob3J0QnJlYWtUaW1lOiBudW1iZXIgPSBERUZBVUxUX1NIT1JUX0JSRUFLX1RJTUUsXHJcblx0XHRwcml2YXRlIGxvbmdCcmVha1RpbWU6IG51bWJlciA9IERFRkFVTFRfTE9OR19CUkVBS19USU1FXHJcblx0KSB7XHJcblx0XHR0aGlzLnRpbWVyQ29udHJvbGxlciA9IG5ldyBQb21vZG9yb1RpbWVyQ29udHJvbGxlcihuZXcgUG9tb2Rvcm9UaW1lcihtaW51dGVzVG9TZWNvbmRzKHRoaXMucG9tb2Rvcm9UaW1lKSkpO1xyXG5cdH1cclxuXHJcblx0c2V0VGltZXMgPSAocG9tb2Rvcm86IG51bWJlciwgc2hvcnRCcmVhazogbnVtYmVyLCBsb25nQnJlYWs6IG51bWJlcik6IHZvaWQgPT4ge1xyXG5cdFx0dGhpcy5wb21vZG9yb1RpbWUgPSBwb21vZG9ybztcclxuXHRcdHRoaXMuc2hvcnRCcmVha1RpbWUgPSBzaG9ydEJyZWFrO1xyXG5cdFx0dGhpcy5sb25nQnJlYWtUaW1lID0gbG9uZ0JyZWFrO1xyXG5cdFx0dGhpcy5jaGFuZ2VTdGF0ZSh0aGlzLmFwcFN0YXRlKTtcclxuXHR9O1xyXG5cclxuXHRjaGFuZ2VTdGF0ZSA9IChzdGF0ZTogUG9tb2Rvcm9BcHBTdGF0ZXMpOiB2b2lkID0+IHtcclxuXHRcdHRoaXMuYXBwU3RhdGUgPSBzdGF0ZTtcclxuXHRcdHRoaXMudGltZXJDb250cm9sbGVyLnJlc3RhcnRUaW1lcigpO1xyXG5cdFx0dGhpcy5zZXRUaW1lckJhc2VkT25TdGF0ZSgpO1xyXG5cdH07XHJcblxyXG5cdHNldFRpbWVyQmFzZWRPblN0YXRlID0gKCk6IHZvaWQgPT4ge1xyXG5cdFx0c3dpdGNoICh0aGlzLmFwcFN0YXRlKSB7XHJcblx0XHRcdGNhc2UgJ1BPTU9ET1JPJzpcclxuXHRcdFx0XHR0aGlzLnRpbWVyQ29udHJvbGxlci5zZXRUaW1lKG1pbnV0ZXNUb1NlY29uZHModGhpcy5wb21vZG9yb1RpbWUpKTtcclxuXHRcdFx0XHRicmVhaztcclxuXHRcdFx0Y2FzZSAnU0hPUlRfQlJFQUsnOlxyXG5cdFx0XHRcdHRoaXMudGltZXJDb250cm9sbGVyLnNldFRpbWUobWludXRlc1RvU2Vjb25kcyh0aGlzLnNob3J0QnJlYWtUaW1lKSk7XHJcblx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdGNhc2UgJ0xPTkdfQlJFQUsnOlxyXG5cdFx0XHRcdHRoaXMudGltZXJDb250cm9sbGVyLnNldFRpbWUobWludXRlc1RvU2Vjb25kcyh0aGlzLmxvbmdCcmVha1RpbWUpKTtcclxuXHRcdFx0XHRicmVhaztcclxuXHRcdH1cclxuXHR9O1xyXG59XHJcblxyXG5jb25zdCBhcHBUaGVtZTogVGhlbWUgPSBuZXcgQXBwVGhlbWUoKTtcclxuY29uc3QgcG9tb2Rvcm9BcHA6IFBvbW9kb3JvQXBwID0gbmV3IFBvbW9kb3JvQXBwKCk7XHJcblxyXG4vKiBldmVudCBsaXN0ZW5lcnMgKi9cclxuc2V0dGluZ3NTdWJtaXQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZTogRXZlbnQpID0+IHtcclxuXHRlLnByZXZlbnREZWZhdWx0KCk7XHJcblxyXG5cdGNvbnN0IHBvbW9kb3JvVGltZSA9IE51bWJlcihwb21vZG9yb1RpbWVJbnB1dC52YWx1ZSk7XHJcblx0Y29uc3Qgc2hvcnRCcmVha1RpbWUgPSBOdW1iZXIoc2hvcnRCcmVha1RpbWVJbnB1dC52YWx1ZSk7XHJcblx0Y29uc3QgbG9uZ0JyZWFrVGltZSA9IE51bWJlcihsb25nQnJlYWtUaW1lSW5wdXQudmFsdWUpO1xyXG5cdGNvbnN0IGNob3NlbkZvbnQ6IEZvbnQgPSBmb250UmFkaW9CdXR0b25zLmZpbmQoYnV0dG9uID0+IGJ1dHRvbi5jaGVja2VkKS52YWx1ZSBhcyBGb250O1xyXG5cdGNvbnN0IGNob3NlbkNvbG91cjogQ29sb3VyID0gY29sb3VyUmFkaW9CdXR0b25zLmZpbmQoYnV0dG9uID0+IGJ1dHRvbi5jaGVja2VkKS52YWx1ZSBhcyBDb2xvdXI7XHJcblxyXG5cdHBvbW9kb3JvQXBwLnNldFRpbWVzKHBvbW9kb3JvVGltZSwgc2hvcnRCcmVha1RpbWUsIGxvbmdCcmVha1RpbWUpO1xyXG5cdGFwcFRoZW1lLnVwZGF0ZVRoZW1lKGNob3NlbkZvbnQsIGNob3NlbkNvbG91cik7XHJcblx0Y2xvc2VNb2RhbCgpO1xyXG59KTtcclxuXHJcbnNldHRpbmdzQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG5cdG9wZW5Nb2RhbCgpO1xyXG59KTtcclxuXHJcbmNsb3NlTW9kYWxCdXR0b24/LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG5cdGNsb3NlTW9kYWwoKTtcclxufSk7XHJcblxyXG50aW1lU3RhdGVCdXR0b25zLmZvckVhY2goYnV0dG9uID0+XHJcblx0YnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGU6IEV2ZW50KSA9PiB7XHJcblx0XHRjb25zdCBidXR0b246IEhUTUxCdXR0b25FbGVtZW50ID0gZS50YXJnZXQgYXMgSFRNTEJ1dHRvbkVsZW1lbnQ7XHJcblx0XHRjb25zdCBzdGF0ZTogUG9tb2Rvcm9BcHBTdGF0ZXMgPSBidXR0b24uZGF0YXNldC5zdGF0ZS50b1VwcGVyQ2FzZSgpIGFzIFBvbW9kb3JvQXBwU3RhdGVzO1xyXG5cdFx0YWN0aXZhdGVTdGF0ZUJ1dHRvbihidXR0b24pO1xyXG5cdFx0cG9tb2Rvcm9BcHAuY2hhbmdlU3RhdGUoc3RhdGUpO1xyXG5cdH0pXHJcbik7XHJcblxyXG4vKiBoZWxwZXIgZnVuY3Rpb25zICovXHJcbi8qIC0tLSB0aW1lciAqL1xyXG5mdW5jdGlvbiBtaW51dGVzVG9TZWNvbmRzKG1pbnV0ZXM6IG51bWJlcik6IG51bWJlciB7XHJcblx0cmV0dXJuIG1pbnV0ZXMgKiBTRUNPTkRTX0lOX01JTlVURTtcclxufVxyXG5cclxuZnVuY3Rpb24gZ2V0TWludXRlc0Zyb21TZWNvbmRzKHNlY29uZHM6IG51bWJlcik6IG51bWJlciB7XHJcblx0cmV0dXJuIE1hdGguZmxvb3Ioc2Vjb25kcyAvIFNFQ09ORFNfSU5fTUlOVVRFKTtcclxufVxyXG5cclxuZnVuY3Rpb24gZ2V0UmVtYWluaW5nU2Vjb25kcyhzZWNvbmRzOiBudW1iZXIpOiBudW1iZXIge1xyXG5cdHJldHVybiBzZWNvbmRzICUgU0VDT05EU19JTl9NSU5VVEU7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGFkZExlYWRpbmdaZXJvKHRpbWU6IG51bWJlcik6IHN0cmluZyB7XHJcblx0cmV0dXJuIHRpbWUgPCAxMCA/IGAwJHt0aW1lfWAgOiB0aW1lLnRvU3RyaW5nKCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGZvcm1hdFRpbWUoc2Vjb25kczogbnVtYmVyKTogc3RyaW5nIHtcclxuXHRjb25zdCBtaW51dGVzID0gZ2V0TWludXRlc0Zyb21TZWNvbmRzKHNlY29uZHMpO1xyXG5cdGNvbnN0IHJlbWFpbmluZ1NlY29uZHMgPSBnZXRSZW1haW5pbmdTZWNvbmRzKHNlY29uZHMpO1xyXG5cdHJldHVybiBhZGRMZWFkaW5nWmVybyhtaW51dGVzKSArICc6JyArIGFkZExlYWRpbmdaZXJvKHJlbWFpbmluZ1NlY29uZHMpO1xyXG59XHJcblxyXG4vKiAtLS0gYXBwIHRpbWUgc3RhdGUgYnV0dG9ucyBmdW5jdGlvbiAqL1xyXG5mdW5jdGlvbiBhY3RpdmF0ZVN0YXRlQnV0dG9uKGJ1dHRvbjogSFRNTEJ1dHRvbkVsZW1lbnQpIHtcclxuXHR0aW1lU3RhdGVCdXR0b25zLmZvckVhY2goYnV0dG9uID0+IGJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKSk7XHJcblx0YnV0dG9uLmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpO1xyXG59XHJcblxyXG4vKiAtLS0gbW9kYWwgKi9cclxuZnVuY3Rpb24gb3Blbk1vZGFsKCkge1xyXG5cdHNldHRpbmdzTW9kYWwuZGF0YXNldC5vcGVuID0gJ3RydWUnO1xyXG59XHJcblxyXG5mdW5jdGlvbiBjbG9zZU1vZGFsKCkge1xyXG5cdHNldHRpbmdzTW9kYWwuZGF0YXNldC5vcGVuID0gJ2ZhbHNlJztcclxufVxyXG4iXX0=
