"use strict";function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _defineProperties(t,e){for(var o=0;o<e.length;o++){var i=e[o];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,_toPropertyKey(i.key),i)}}function _createClass(t,e,o){return e&&_defineProperties(t.prototype,e),o&&_defineProperties(t,o),Object.defineProperty(t,"prototype",{writable:!1}),t}function _toPropertyKey(t){t=_toPrimitive(t,"string");return"symbol"===_typeof(t)?t:String(t)}function _toPrimitive(t,e){if("object"!==_typeof(t)||null===t)return t;var o=t[Symbol.toPrimitive];if(void 0===o)return("string"===e?String:Number)(t);o=o.call(t,e||"default");if("object"!==_typeof(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var settingsButton=document.querySelector("#settings-button"),settingsModal=document.querySelector("#settings-modal"),closeModalButton=document.querySelector("#close-settings-modal-button"),settingsForm=settingsModal.querySelector("#settings-form"),pomodoroTimeInput=settingsForm.querySelector("#pomodoro-time"),shortBreakTimeInput=settingsForm.querySelector("#short-break-time"),longBreakTimeInput=settingsForm.querySelector("#long-break-time"),fontRadioButtons=Array.from(settingsForm.querySelectorAll('input[type="radio"][name="font"]')),colourRadioButtons=Array.from(settingsForm.querySelectorAll('input[type="radio"][name="colour"]')),settingsSubmit=settingsForm.querySelector('button[type="submit"]'),timeStateButtons=Array.from(document.querySelectorAll(".state-button")),SECONDS_IN_MINUTE=60,DEFAULT_FONT="sans-serif",DEFAULT_COLOUR="red",DEFAULT_POMODORO_TIME=25,DEFAULT_SHORT_BREAK_TIME=5,DEFAULT_LONG_BREAK_TIME=15,AppTheme=_createClass(function t(){var o=this;_classCallCheck(this,t),this.colour=DEFAULT_COLOUR,this.font=DEFAULT_FONT,this.updateTheme=function(t,e){o.colour=e,o.font=t,document.body.dataset.font=t,document.body.dataset.theme=e}}),appTheme=new AppTheme,minutesToSeconds=function(t){return t*SECONDS_IN_MINUTE},getMinutesFromSeconds=function(t){return Math.floor(t/SECONDS_IN_MINUTE)},getRemainingSeconds=function(t){return t%SECONDS_IN_MINUTE},addLeadingZero=function(t){return t<10?"0".concat(t):t.toString()},formatTime=function(t){var e=getMinutesFromSeconds(t),t=getRemainingSeconds(t);return addLeadingZero(e)+":"+addLeadingZero(t)},PomodoroTimer=_createClass(function t(){var e=this,o=0<arguments.length&&void 0!==arguments[0]?arguments[0]:0;_classCallCheck(this,t),this.time=o,this.observers=[],this.state="INITIAL",this.start=function(){e.state="COUNTING",e.count()},this.count=function(){e.countTimeout=setTimeout(function(){e.setTime(e.getTime()-1),e.count()},1e3)},this.pause=function(){e.state="PAUSED",clearTimeout(e.countTimeout)},this.restart=function(){e.state="INITIAL",e.countingTime=e.time,clearTimeout(e.countTimeout)},this.getTime=function(){return e.countingTime},this.setTime=function(t){e.time=t,e.countingTime=t,e.notifyObservers()},this.getState=function(){return e.state},this.setState=function(t){e.state=t},this.addObserver=function(t){e.observers.push(t)},this.notifyObservers=function(){e.observers.forEach(function(t){return t.update(e.countingTime,e.time)})},this.countingTime=o}),TimerView=_createClass(function t(e){var o=this;_classCallCheck(this,t),this.update=function(t,e){o.updateTime(t)},this.updateButtonLabel=function(t){o.timerButton.innerText=t},this.updateTime=function(t){o.timerTime.innerHTML=formatTime(t)},this.timer=document.querySelector(".timer"),this.timeProgressBar=this.timer.querySelector("#progress-bar"),this.timerTime=this.timer.querySelector("#timer-time"),this.timerButton=this.timer.querySelector("#timer-button"),this.timerButton.addEventListener("click",e)}),TimerController=_createClass(function t(e){var o=this;_classCallCheck(this,t),this.timer=e,this.timerAction=function(){switch(o.timer.getState()){case"INITIAL":case"PAUSED":o.timer.start(),o.view.updateButtonLabel("pause");break;case"COUNTING":o.timer.pause(),o.view.updateButtonLabel("start")}},this.restartTimer=function(){o.timer.restart(),o.view.updateButtonLabel("start")},this.setTime=function(t){o.timer.setTime(t)},this.view=new TimerView(this.timerAction),e.addObserver(this.view),this.view.update(this.timer.getTime(),this.timer.getTime())}),PomodoroApp=_createClass(function t(){var i=this,e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:DEFAULT_POMODORO_TIME,o=1<arguments.length&&void 0!==arguments[1]?arguments[1]:DEFAULT_SHORT_BREAK_TIME,n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:DEFAULT_LONG_BREAK_TIME;_classCallCheck(this,t),this.pomodoroTime=e,this.shortBreakTime=o,this.longBreakTime=n,this.appState="POMODORO",this.setTimes=function(t,e,o){i.pomodoroTime=t,i.shortBreakTime=e,i.longBreakTime=o,i.changeState(i.appState)},this.changeState=function(t){i.appState=t,i.timer.restartTimer(),i.setTimerBasedOnState()},this.setTimerBasedOnState=function(){switch(i.appState){case"POMODORO":i.timer.setTime(minutesToSeconds(i.pomodoroTime));break;case"SHORT_BREAK":i.timer.setTime(minutesToSeconds(i.shortBreakTime));break;case"LONG_BREAK":i.timer.setTime(minutesToSeconds(i.longBreakTime))}},this.timer=new TimerController(new PomodoroTimer(minutesToSeconds(this.pomodoroTime)))}),pomodoroApp=new PomodoroApp,openModal=function(){settingsModal.dataset.open="true"},closeModal=function(){settingsModal.dataset.open="false"},activateStateButton=function(t){timeStateButtons.forEach(function(t){return t.classList.remove("active")}),t.classList.add("active")};settingsSubmit.addEventListener("click",function(t){t.preventDefault();var t=Number(pomodoroTimeInput.value),e=Number(shortBreakTimeInput.value),o=Number(longBreakTimeInput.value),i=fontRadioButtons.find(function(t){return t.checked}).value,n=colourRadioButtons.find(function(t){return t.checked}).value;pomodoroApp.setTimes(t,e,o),appTheme.updateTheme(i,n),closeModal()}),settingsButton.addEventListener("click",function(){openModal()}),null!=closeModalButton&&closeModalButton.addEventListener("click",function(){closeModal()}),timeStateButtons.forEach(function(t){return t.addEventListener("click",function(t){var t=t.target,e=t.dataset.state.toUpperCase();activateStateButton(t),pomodoroApp.changeState(e)})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
